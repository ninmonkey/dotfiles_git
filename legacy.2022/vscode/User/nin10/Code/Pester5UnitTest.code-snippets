{
    "Pester ‚á¢ CommandTemplate": {
        // source: JustinGrote : https://gist.github.com/JustinGrote/eaade376c3da5baf4455b7a51fa17444
        "scope": "ps1,powershell",
        "prefix": "Pester Template üêí", //PesterTest: NewFile",
        "body": [
            "#requires -modules @{ModuleName='Pester';ModuleVersion='5.0.0'}",
            "\\$SCRIPT:__PesterFunctionName = \\$myinvocation.MyCommand.Name.split('.')[0]",
            "",
            "Describe \"\\$__PesterFunctionName\" -Tag Unit {",
            "    BeforeAll {",
            "        Import-Module ${1:ModuleName} -Force",
            "        # . \\$(Get-ChildItem -Path \\$PSScriptRoot/.. -Recurse -Filter \"\\$__PesterFunctionName.ps1\")",
            "        # \\$Mocks = Resolve-Path \"\\$PSScriptRoot/Mocks\"",
            "        \\$ErrorActionPreference = 'Stop'",
            "    }",
            "    It 'Runs without error' {",
            "        . \\$__PesterFunctionName ${0:Args}",
            "    }",
            "}"
        ],
        "description": "Pester Function Test"
    },
    "Pester ‚á¢ ForEach Data üêí": {
        // see also: "Pester ‚á¢ CommandTemplate"
        "scope": "ps1,powershell",
        "prefix": "ForEach üêí Pester Data",
        "body": [
            "It '\"<${1:Name}>\" Returns \"<expected>\"' -ForEach @(",
            "    @{ ${1:Name} = ${2:x} ; Expected = ${3:y} }${0}",
            ") {",
            "    . \\$__PesterFunctionName \\$${1:Name} | Should -Be \\$Expected",
            "}",
        ],
        "description": "template for data-driven test"
    },
}