{
    /*

  ### Sect: About

      Profile:            Jake, Screencasting mode.
      Original Rewrite:   2021-10-10

      Simplified config, opt-in to better screencasting config

    /*

### Sect: Screencast Mode

       tags: Screencast

*/
    // "screencastMode.fontSize": 16,
    "screencastMode.fontSize": 20,
    // Controls how long (in milliseconds) the keyboard overlay is shown in screencast mode.
    "screencastMode.keyboardOverlayTimeout": 500, // 300, // 800
    "screencastMode.mouseIndicatorColor": "#8dc4a0",
    "screencastMode.mouseIndicatorColor": "#c7e169",
    "screencastMode.mouseIndicatorColor": "#c7e180",
    "screencastMode.mouseIndicatorColor": "#e0ff1a80",
    "screencastMode.mouseIndicatorSize": 30, // fdef: 20
    "screencastMode.onlyKeyboardShortcuts": true, // def: true
    // Controls the vertical offset of the screencast mode overlay from the bottom as a percentage of the workbench height.
    "screencastMode.verticalOffset": 80, // ddef: 20
    "screencastMode.verticalOffset": 90, // def: 20
    // "terminal.integrated.minimumContrastRatio": 1,
    /*


  ### Sect: Config Settings to Experiment with

      */
    // will this prevent prompt from synapse (venv) automatically changing your prompt
    "python.analysis.typeCheckingMode": "basic",
    "python.terminal.activateEnvInCurrentTerminal": false,
    "python.terminal.activateEnvironment": false,
    "debug.openExplorerOnEnd": false, // with auto tester, you want this to false
    "debug.focusWindowOnBreak": true,
    "editor.selectionHighlight": true,
    "editor.autoSurround": "languageDefined",
    "editor.autoClosingBrackets": "beforeWhitespace",
    "editor.autoClosingOvertype": "always",
    "editor.trimAutoWhitespace": true,
    "editor.dragAndDrop": true,
    // "editor.codeActionsOnSave":{
    //     "source.fixAll": true,
    //     "source.organizeImports": true
    // },
    "debug.console.wordWrap": true,
    "debug.console.historySuggestions": false, // may huge impact on removing 'spam' in debug's intellisense
    "debug.console.collapseIdenticalLines": true,
    "editor.copyWithSyntaxHighlighting": true,
    "editor.codeLens": true,
    "editor.find.seedSearchStringFromSelection": true,
    "editor.find.cursorMoveOnType": true,
    "editor.fontLigatures": true,
    "editor.folding": true,
    "editor.foldingHighlight": true, //collapsed folded blocks highlight the single line
    "editor.foldingStrategy": "auto",
    "editor.showFoldingControls": "mouseover", // hide icons until you hover the gutter
    "editor.highlightActiveIndentGuide": true, // highight **just one** specific line-block (the current block)
    // "editor.fontWeight": "normal", // bold 300, 900,
    "editor.hover.delay": 300, // 10, 710,
    "editor.hover.enabled": true, // false,
    // "editor.hover.sticky": false,
    "editor.inlineHints.enabled": true, // does what? doesn't seem to be "run tests" or "linting"
    // Code action kinds to be run on save.
    // "editor.codeActionsOnSave": {
    //     "source.fixAll": false,
    //     "source.organizeImports": false,
    // },
    "editor.lightbulb.enabled": true,
    // "editor.occurrencesHighlight": true,
    // "editor.overviewRulerBorder": true, // overview does what?
    // "editor.hideCursorInOverviewRuler": true, // does what?
    /*

    ### Sect: Minimap

           tags:

    */
    "editor.minimap.enabled": true,
    //
    // mode: small right
    "editor.minimap.renderCharacters": true,
    "editor.minimap.maxColumn": 70,
    //
    // mode: renderBlocks wide
    // "editor.minimap.renderCharacters": false,
    // "debug.focusWindowOnBreak": true,
    "editor.minimap.maxColumn": 140,
    "editor.minimap.scale": 2, // nice on large monitor
    "editor.minimap.showSlider": "always",
    "editor.minimap.showSlider": "mouseover",
    //
    // mode: small left
    "editor.minimap.side": "right",
    "editor.minimap.maxColumn": 60,
    "editor.linkedEditing": true,
    "editor.minimap.enabled": false,
    "testing.gutterEnabled": false,
    "testing.gutterEnabled": false,
    "editor.inlineSuggest.enabled": false,
    "editor.inlineSuggest.mode": false,
    "editor.lineNumbers": false,
    "breadcrumbs.enabled": false,
    "window.title": "${activeEditorShort}${separator}${activeEditorShort}",
    // "editor.minimap.size": ,
    "editor.minimap.size": "fill",
    "editor.minimap.scale": 1,
    // "editor.inlineHints.fontSize": 0,
    // "editor.padding.bottom": 0,
    // "editor.padding.top": 0,
    "editor.matchBrackets": "near",
    "editor.matchBrackets": "always", // shows the block you're in, without touching bracket
    "editor.parameterHints.cycle": true,
    "editor.parameterHints.enabled": true,
    "editor.peekWidgetDefaultFocus": "tree",
    // "editor.quickSuggestions": false | true | Obj

    "editor.quickSuggestions": {
        "other": false,
        "comments": false,
        "strings": false
    },
    "diffEditor.ignoreTrimWhitespace": false,
    // more: "diffEditor.*"
    // "workbench.editor.limit.value": 10,
    // 20 more: "workbench.editor.*"
    // "workbench.editor.untitled.hint": "text",
    // "explorer.openEditors.sortOrder": "alphabetical",
    // "editor.stickyTabStops": false,
    "diffEditor.wordWrap": "inherit",
    "editor.wrappingStrategy": "simple",

    "powershell.developer.editorServicesWaitForDebugger": false,
    // When the PowerShell extension is starting up, it checks for a session file in order to connect to the language server. This setting determines how long until checking for the session file times out. (default is 240 seconds or 4 minutes)
    "powershell.developer.waitForSessionFileTimeoutSeconds": 240,
    // Loads user and system-wide PowerShell profiles (profile.ps1 and Microsoft.VSCode_profile.ps1) into the PowerShell session. This affects IntelliSense and interactive script execution, but it does not affect the debugger.
    "powershell.enableProfileLoading": true,
    // Controls the comment-based help completion behavior triggered by typing '##'. Set the generated help style with 'BlockComment' or 'LineComment'. Disable the feature with 'Disabled'.
    "powershell.helpCompletion": "BlockComment",
    // Switches focus to the console when a script selection is run or a script file is debugged. This is an accessibility feature. To disable it, set to false.
    "powershell.integratedConsole.focusConsoleOnExecute": true,
    // Use the vscode API to clear the terminal since that's the only reliable way to clear the scrollback buffer. Turn this on if you're use to 'Clear-Host' clearing scroll history as wellclear-terminal-via-lsp.
    "powershell.integratedConsole.forceClearScrollbackBuffer": false,
    // Shows the integrated console when the PowerShell extension is initialized.
    "powershell.integratedConsole.showOnStartup": true,
    // Do not show the Powershell Integrated Console banner on launch
    "powershell.integratedConsole.suppressStartupBanner": false,
    // Falls back to the legacy (lightweight) ReadLine experience. This will disable the use of PSReadLine in the PowerShell Integrated Console.
    "powershell.integratedConsole.useLegacyReadLine": false,
    // Defines the verbosity of output to be used when debugging a test or a block. For Pester 5 and newer the default value Diagnostic will print additional information about discovery, skipped and filtered tests, mocking and more.
    // "powershell.pester.debugOutputVerbosity": "Diagnostic",
    // Defines the verbosity of output to be used. For Pester 5 and newer the default value FromPreference, will use the Output settings from the $PesterPreference defined in the caller context, and will default to Normal if there is none. For Pester 4 the FromPreference and Normal options map to All, and Minimal option maps to Fails.
    "powershell.pester.outputVerbosity": "FromPreference",
    // Use code lens that is compatible with Pester 4. Disabling this will show 'Run Tests' on all It, Describe and Context blocks, and will correctly work only with Pester 5 and newer.
    // "powershell.pester.useLegacyCodeLens": true,
    // Specifies whether you should be prompted to update your version of PackageManagement if it's under 1.4.6.
    "powershell.promptToUpdatePackageManagement": false,
    // Specifies whether you should be prompted to update your version of PowerShell.
    "powershell.promptToUpdatePowerShell": false,
    // Starts PowerShell extension features automatically when a PowerShell file opens. If false, to start the extension, use the 'PowerShell: Restart Current Session' command. IntelliSense, code navigation, integrated console, code formatting, and other features are not enabled until the extension starts.
    "powershell.startAutomatically": false,
    "powershell.startAutomatically": true,

    "editor.bracketPairColorization.enabled": true,

    "testing.gutterEnabled": true,
    "testing.gutterEnabled": false,
    "search.mode": "reuseEditor",
    "terminal.integrated.fontWeight": "normal",
    "terminal.integrated.fontWeightBold": "bold",
    "terminal.integrated.letterSpacing": 0,
    "errorLens.fontWeight": "normal",
    "terminal.integrated.lineHeight": 1,
    "editor.inlayHints.fontFamily": "corbel, 'cascadia code', calibri, Consolas,  Consolas, 'Courier New', monospace",
    "editor.inlayHints.fontFamily": "'cascadia code pl semilight', verdana, 'cascadia code', monospace",
    // "editor.fontFamily": "cascadia code, calibri, 'cascadia code', Consolas, 'Courier New', monospace",
    // Font size for the suggest widget. When set to `0`, the value of `editor.fontSize` is used.
    // Line height for the suggest widget. When set to `0`, the value of `editor.lineHeight` is used. The minimum value is 8.
    "editor.suggestLineHeight": 0,
    // Controls whether suggestions should automatically show up when typing trigger characters.
    "debug.console.fontFamily": "'cascadia code pl', fira code', 'cascadia code', consolas",
    "editor.fontFamily": "'cascadia code pl semilight', 'cascadia code pl', 'cascadia code', monospace",
    "editor.fontFamily": "'cascadia code pl semilight', verdana, 'cascadia code', monospace",
    "editor.fontFamily": "'cascadia code pl', 'cascadia code pl semilight', verdana, 'cascadia code', monospace",
    "editor.fontFamily": "'cascadia code retina', 'fira code', 'Fira Code retina', 'FuraCode nerd font', Consolas, 'Courier New', monospace",
    "editor.fontFamily": "'cascadia code retina', consolas, monospace",
    "editor.fontFamily": "'cascadia code', 'fira code', 'Fira Code retina', 'FuraCode nerd font', Consolas, 'Courier New', monospace",
    "editor.fontFamily": "'cascadia code', consolas, monospace",
    "editor.fontFamily": "'cascadia code', verdana, 'cascadia code', monospace",
    "editor.fontFamily": "'fira code retina', 'cascadia code', Consolas, 'fira code', 'Courier New', monospace",
    "editor.fontFamily": "'Fira code Retina', Consolas, 'Courier New', monospace",
    "editor.fontFamily": "'fira code', Consolas, monospace",
    "editor.fontFamily": "'FiraCode Nerd font', Consolas, 'Courier New', monospace",
    "editor.fontFamily": "'firacode nerd font'", //can view nerd font icons
    "editor.fontFamily": "'FuraCode Nerd font', Consolas, 'Courier New', monospace",
    "editor.fontFamily": "'FiraCode Nerd Font', 'Fira code Retina', Consolas, 'Courier New', monospace",
    "editor.fontFamily": "'fira code retina', consolas, monospace", // retina seems bolder
    "editor.fontFamily": "'fira code', 'cascadia code', consolas, monospace", // retina seems bolder
    "editor.fontFamily": "'cascadia code pl semilight', 'cascadia code', monospace",
    "editor.fontFamily": "'cascadia code pl', 'cascadia code', monospace",
    "errorLens.fontFamily": "calibri", //"arial bold",
    "editor.fontSize": 14,
    "editor.fontSize": 17,
    "editor.fontSize": 16,
    "debug.console.fontSize": 16,
    "terminal.integrated.fontSize": 16,
    "errorLens.fontSize": "12px",
    // "editor.fontWeight": "350", // for cascadia code
    // fira: retina is more bold (on nin8)
    // "editor.fontFamily": "'comic sans', 'fira code', 'Fira Code retina', 'FuraCode nerd font', Consolas, 'Courier New', monospace",
    // "editor.fontWeight": "350", // for cascadia code
    // "editor.fontFamily": "'furacode nerd font'", //can view nerd font icons
    "editor.suggestFontSize": 14, // ctrl+space size
    "terminal.integrated.fontSize": 15,
    "errorLens.enabled": true, // for zoom -1
    "errorLens.delay": 300,
    "errorLens.followCursor": "closestProblem",
    "errorLens.exclude": [], //# regex
    "errorLens.excludeBySource": [], // ["eslint"]
    "errorLens.followCursorMore": 2,
    "errorLens.statusBarIconsEnabled": true,
    "yaml.schemas": {},
    // "errorLens.severityText": [
    //     "ERROR",
    //     "WARNING",
    //     "INFO",
    //     "HINT"
    // ]
    /*

    ### Sect: Testing

           tags: Tag1, Tag2

    */
    // Configures when the error peek view is automatically opened.
    //  - failureAnywhere: Open automatically no matter where the failure is.
    //  - failureInVisibleDocument: Open automatically when a test fails in a visible document.
    //  - never: Never automatically open.
    "testing.automaticallyOpenPeekView": "failureInVisibleDocument",
    // Controls whether to automatically open the peek view during auto-run mode.
    "testing.automaticallyOpenPeekViewDuringAutoRun": false,
    // How long to wait, in milliseconds, after a test is marked as outdated and starting a new run.
    "testing.autoRun.delay": 300,
    // Controls which tests are automatically run.
    //  - all: Automatically runs all discovered test when auto-run is toggled. Reruns individual tests when they are changed.
    //  - rerun: Reruns individual tests when they are changed. Will not automatically run any tests that have not been already executed.
    // "testing.autoRun.mode": "all",
    "testing.autoRun.mode": "rerun",
    // Controls the action to take when left-clicking on a test decoration in the gutter.
    //  - run: Run the test.
    //  - debug: Debug the test.
    //  - contextMenu: Open the context menu for more options.
    "testing.defaultGutterClickAction": "run",
    // Controls whether the running test should be followed in the test explorer view
    "testing.followRunningTest": true,
    // Controls whether test decorations are shown in the editor gutter.

    "editor.columnSelection": true,
    /*


    ###### SubSect: Window title templates

      see more: '//dotfiles_git/vscode/settings_global/Example Config Options ⇢ Window.Title Format Strings.json'

      */
    // output: NinMonkey.Console ⁞ settings.json ⁞ c:\foo\bar
    "window.title": "${dirty}${rootName}${separator}${activeEditorShort}|${separator}${activeFolderMedium}",
    // output: NinMonkey.Console ⁞ settings.json ⁞ bar
    "window.title": "${dirty}${rootName}${separator}${activeEditorShort}${separator}${activeFolderShort}",
    // output: settings.json <- bar
    "window.title": "${activeEditorShort}$ <- ${activeFolderShort}",
    // output: Format-FileSize.ps1 ⇽ [public]
    "window.title": "${activeEditorShort}$ ⇽ ${activeFolderShort}",
    // output: Invoke-IPython.ps1 [native_wrapper] ⁞ NinMonkey.Console (Workspace)
    "window.title": "${dirty}${activeEditorShort}$ [${activeFolderShort}]${separator}${rootName}",
    // output: NinMonkey.Console (Workspace) ⁞ Invoke-IPython.ps1 ⁞ public\native_wrapper
    "window.title": "${dirty}${rootName}${separator}${activeEditorShort}${separator}${activeFolderMedium}",
    // "window.title": "${dirty}${rootName} ┐ ${activeEditorShort}$ ⇽ ${folderName}",
    "window.titleSeparator": " ⁞ ", // or: ┐ ⇽
    /*

    ###### SubSect: Workbench theme overrides

            docs: <https://code.visualstudio.com/api/references/theme-color>
        */
    "editor.rulers": [
        120
    ], // mode: zen
    "workbench.colorCustomizations": {
        // new built-in bracket colors
        // "editorBracketMatch.background": "#29b0c2",
        // custom for addons:
        "errorLens.errorBackground": "#e4545400",
        "errorLens.errorMessageBackground": "#e4545400",
        "errorLens.errorForeground": "#ff646400",
        "errorLens.warningBackground": "#ff942f00",
        "errorLens.warningForeground": "#fa973a00",
        "errorLens.warningMessageBackground": "#fff00000",
        // highlight 'active' window, without being too bold
        "window.activeBorder": "#a75715e3", // pretty bright
        "window.activeBorder": "#a857ff85", // pretty bright
        // "window.inactiveBorder": "#a7b67080",
        // "statusBar.border": "magenta",
        "window.inactiveBorder": "#a7b67000",
        "editorRuler.foreground": "#ff4081",
        "editorRuler.foreground": "#774958",
        // "tree.indentGuidesStroke": "#ff0000"
        // "debugView.valueChangedHighlight": "#ff0000"
        // "diffEditor.insertedTextBackground": "#ff0000",
        // "diffEditor.insertedTextBorder": "#ff0000",
        // "diffEditor.removedTextBackground": "#ff0000",
        // "diffEditor.border": "#ff0000",
        // "window.inactiveBorder": "#ff000069",
        // "editorCursor.foreground": "#ff0000"
        // "editorCursor.background": "#ff0000"
        /*
                editor find
            */
        /*
            "editor.findMatchBackground": "#ff0000",
            "editor.findMatchBorder": "#ff0000",
            "editor.findMatchHighlightBackground": "#ff0000",
            "editor.findRangeHighlightBackground": "#ff0000",
            "editor.findMatchHighlightBorder": "#ff0000",
            "editor.findRangeHighlightBorder": "#ff0000",
            "editorOverviewRuler.findMatchForeground": "#ff0000",
            "searchEditor.findMatchBackground": "#ff0000",
            "searchEditor.findMatchBorder": "#ff0000",
            "editor.snippetFinalTabstopHighlightBorder": "#ff0000",
            "editor.snippetFinalTabstopHighlightBackground": "#ff0000",
            "editorOverviewRuler.modifiedForeground": "#ff0000",
            */
        // newest 2021-10-03
        "window.activeBorder": "#ff06d5",
        "window.inactiveBorder": "#ff26db",
        "tab.activeBorderTop": "#b3b3b3",
        // "tab.activeBorder": "#0feb72",
        // "tab.lastPinnedBorder": "#f133c2",
        // "errorLens.errorBackground": "#ff0000",
        // "errorlens"
        // "textSeparator.foreground": "#ff0000
    },
}