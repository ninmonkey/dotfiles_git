{
  "launch": {
    "configurations": [
      /*
      
      ### Sect: Build in-Dotnet launchers
      
             tags: dotnet, defaults, launch.json
      
      */

      // attach to -> remote dotnet core console
      // Attach a debugger to a .NET Core Console App on a remote machine.
      // launch -> [🐛debugger] dotnet core console app
      // launch -> [🌍Browser] + [🐛debugger] dotnet core console app
      // Attach a debugger to a .NET Core Console App.
      //   // attach to -> local dotnet core console

      // Attach a debugger to a .NET Core Console App.
      // [1] Attach -> [🐛debugger] to [🏠Local] dotnet core [Console💻] app
      {
        "name": "[1] .NET Core Attach ▂ 🐛+💻▂",
        "type": "coreclr",
        "request": "attach"
      },

      // [2] Attach -> [🐛debugger] to [Remote🖧] dotnet core [Console💻] app
      // [2] 👫Attach -> [🐛debugger] to a .NET Core [Console💻] App on a [remote🖧] machine.
      {
        "name": "[2] .NET Core Attach ▂ 🐛+💻 ▂ is [1] + (🖧Remote)▂",
        "type": "coreclr",
        "request": "attach",
        "pipeTransport": {
          "pipeCwd": "${workspaceFolder}",
          "pipeProgram": "enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'",
          "pipeArgs": [],
          "debuggerPath": "enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"
        }
      },
      // Launch a .NET Core Console App with a debugger.
      // [3] Launch -> [🐛debugger] to dotnet core [Console💻] app

      {
        "name": "[3] .NET Core 🏃‍♀️Launch ▂ 🐛+💻▂",
        "type": "coreclr",
        "request": "launch",
        "preLaunchTask": "build",
        "program": "${workspaceFolder}/bin/Debug/<target-framework>/<project-name.dll>",
        "args": [],
        "cwd": "${workspaceFolder}",
        "stopAtEntry": false,
        "console": "internalConsole"
      },
      // [4] launch -> [🌍Browser] + [🐛debugger] a .NET Core [🌍Web] App
      // Launch a .NET Core Web App with both a browser and a debugger.

      {
        "name": "[4] .NET Core 🏃‍♀️Launch ▂ 🐛+[🌍Browser]▂(🌍Web)▂",
        "type": "coreclr",
        "request": "launch",
        "preLaunchTask": "build",
        "program": "${workspaceFolder}/bin/Debug/<target-framework>/<project-name.dll>",
        "args": [],
        "cwd": "${workspaceFolder}",
        "stopAtEntry": false,
        "serverReadyAction": {
          "action": "openExternally",
          "pattern": "\\bNow listening on:\\s+(https?://\\S+)"
        },
        "env": {
          "ASPNETCORE_ENVIRONMENT": "Development"
        },
        "sourceFileMap": {
          "/Views": "${workspaceFolder}/Views"
        }
      },

      // [5] Launch -> .NET Core [Console💻] App on a [Remote🖧] machine.
      // Launch a .NET Core Console App on a remote machine.

      {
        "name": "[5] .NET Core 🏃‍♀️Launch (💻console) ▂on (🖧Remote)▂",
        "type": "coreclr",
        "request": "launch",
        "preLaunchTask": "build",
        "program": "${workspaceFolder}/bin/Debug/<target-framework>/<project-name.dll>",
        "args": [],
        "cwd": "${workspaceFolder}",
        "stopAtEntry": false,
        "console": "internalConsole",
        "pipeTransport": {
          "pipeCwd": "${workspaceFolder}",
          "pipeProgram": "enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'",
          "pipeArgs": [],
          "debuggerPath": "enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"
        }
      },

      /*
      
      ### Sect: From JustinGrote
      
      tags: dotnet, launch.json, justinGrote
      
      */
      // [1] JustinGrote:
      {
        "name": "[1] JG Pwsh: Interactive Pwsh (💻Console)",
        "presentation": {
          "group": "Powershell"
        },
        "request": "launch",
        "type": "PowerShell"
      },
      // [2] JustinGrote:
      {
        "cwd": "${file}",
        "name": "[2] JG Pwsh: Run",
        "presentation": {
          "group": "Powershell"
        },
        "request": "launch",
        "script": "${file}",
        "type": "PowerShell"
      },
      // [3] JustinGrote:
      {
        "args": ["${command:SpecifyScriptArgs}"],
        "cwd": "${file}",
        "name": "[3] JG Pwsh: Run w/ Args",
        "presentation": {
          "group": "Powershell"
        },
        "request": "launch",
        "script": "${file}",
        "type": "PowerShell"
      },
      // [4] JustinGrote:
      {
        "args": ["${command:SpecifyScriptArgs}"],
        "name": "[4] JG Pwsh: Pester",
        "presentation": {
          "group": "Powershell"
        },
        "request": "launch",
        "script": "Invoke-Pester",
        "type": "PowerShell"
      },
      // [5] JustinGrote:
      {
        "name": "[5] JG Pwsh: Attach",
        "presentation": {
          "group": "Powershell"
        },
        "processId": "${command:PickPSHostProcess}",
        "request": "attach",
        "runspaceId": 1,
        "type": "PowerShell"
      },

      /*
      
      ### Sect: Personal Launchers
      
      tags: dotnet, launch.json
      
      */
      {
        "name": "Main.ps1 🏃‍♂️",
        "type": "PowerShell",
        "request": "launch",
        "script": "${workspaceFolder}/main.ps1",
        "cwd": "${workspaceFolder}",
        "presentation": {
          "hidden": true,
          "group": "",
          "order": 1
        }
      },
      {
        "name": "Cur.ps1 🏃‍♂️",
        "type": "PowerShell",
        "request": "launch",
        "script": "${file}",
        "presentation": {
          "hidden": false,
          "group": "",
          "order": 1
        },
        "cwd": "${workspaceFolder}"
      },
      {
        "presentation": {
          "hidden": false,
          "group": "VisualTest"
          // "order": 1
        },
        "name": "🐛🎨 cur: Invoke-GithubInfo visualTest ",
        "type": "PowerShell",
        "request": "launch",
        "script": "${workspaceFolder}/test/public/visual_test/Invoke-GithubInfo.visual_test.ps1",
        // "cwd": "${file}"
        "cwd": "${workspaceFolder}"
      },
      {
        "name": "[🐛] run a specific *.tests.ps1",
        "type": "PowerShell",
        "request": "launch",
        "presentation": {
          "hidden": true,
          "group": "",
          "order": 1
        },
        "script": "Invoke-pester",
        "args": ["-Path 'public\\ConvertFrom-LiteralPath.tests.ps1'"],
        "cwd": "${workspaceFolder}"
      },
      // {
      //     "name": "PowerShell: Launch Script",
      //     "type": "PowerShell",
      //     "request": "launch",
      //     "script": "enter path or command to execute e.g.: ${workspaceFolder}/src/foo.ps1 or Invoke-Pester",
      //     "cwd": "${workspaceFolder}"
      // },
      {
        "name": "cur.ps1",
        "type": "PowerShell",
        "presentation": {
          "hidden": true,
          "group": "",
          "order": 1
        },
        "request": "launch",
        "script": "${file}",
        "cwd": "${file}"
      },
      {
        "name": "cur 🐜 (temp_cur_test.ps1)",
        "type": "PowerShell",
        "request": "launch",
        "presentation": {
          "hidden": true,
          "group": "",
          "order": 1
        },
        "script": "${workspaceFolder}/private/temp_cur_test.ps1",
        "cwd": "${workspaceFolder}"
      },

      {
        "presentation": {
          "hidden": false,
          "group": "VisualTest"
          // "order": 1
        },
        "name": "🐛🎨 cur: Format-Dict visualTest ",
        "type": "PowerShell",
        "request": "launch",

        "script": "${workspaceFolder}/test/public/visual_test/Format-Dict.visual_test.ps1",
        // "cwd": "${file}"
        "cwd": "${workspaceFolder}"
      },
      {
        "presentation": {
          "hidden": false,
          "group": "VisualTest"
          // "order": 1
        },
        "name": "🐛🎨 cur: visualTest ",
        "type": "PowerShell",
        "request": "launch",
        "script": "${workspaceFolder}/test/public/visual_test/_format_RgbColorStringy.visual_tests.ps1",
        // "cwd": "${file}"
        "cwd": "${workspaceFolder}"
      },
      {
        "name": "cur: Module Test🐛",
        "type": "PowerShell",
        "request": "launch",
        "presentation": {
          "hidden": true,
          "group": "",
          "order": 1
        },
        "script": "${workspaceFolder}/test/private/_import_error_test.ps1",
        // "cwd": "${file}"
        "cwd": "${workspaceFolder}"
      },
      {
        "name": "🐛 : [Details] — ", // [nin.PowerShell]",
        "type": "PowerShell",
        "request": "launch",
        "presentation": {
          "hidden": true,
          "group": "",
          "order": 1
        },
        "script": "Invoke-Pester",
        "args": ["-Output", "Detailed"],
        "cwd": "${workspaceFolder}"
      },
      {
        "name": "🐛 : | default | — ", // [nin.PowerShell]",
        "type": "PowerShell",
        "presentation": {
          "hidden": true,
          "group": "",
          "order": 1
        },
        "request": "launch",
        "script": "Invoke-Pester",
        // "args": [],
        "cwd": "${workspaceFolder}"
      },
      {
        "name": "🐛 | 🏃 | #WIP |",
        "type": "PowerShell",
        "request": "launch",
        "script": "Invoke-Pester",
        "cwd": "${workspaceFolder}",
        "presentation": {
          "hidden": true,
          "group": "",
          "order": 1
        },
        "args": [
          "-Output",
          "Detailed",
          "-TagFilter",
          // "wiph"
          "wip-hash"
        ]
      }

      /*

        end of : Settings -> launch -> configurations -> [..]

      */
    ],

    "compounds": [
      // {
      //   "name": "Compound",
      //   "configurations": [],
      //   "preLaunchTask": "",
      //   "presentation": {
      //     "hidden": false,
      //     "group": "",
      //     "order": 1
      //   },
      //   "stopAll": false
      // }
    ]
  },
  /*
    profile: j:/vscode_datadir/games/users/settings.json
    brand new 
    created from scratch: 2021-11-02


see also: full profile: <C:\Users\cppmo_000\SkyDrive\Documents\2021\dotfiles_git\vscode\User\nin10\Code - Insiders\DefaultSettings.settings.json>
    */
  "debug.inlineValues": true,
  "editor.suggest.filterGraceful": true,
  "editor.fontSize": 15,
  "editor.fontSize": 16,
  "editor.fontFamily": "'cascadia code pl', Consolas, 'Courier New', monospace",
  "editor.fontFamily": "'cascadia code', 'cascadia code pl', Consolas, 'Courier New', monospace",
  "editor.fontFamily": "'cascadia code pl', Consolas, 'Courier New', monospace",
  "editor.fontFamily": "'cascadia code pl'",
  // when super tiny: at least right now for the editor, 'cascadia code' *is* better looking than 'cascadia code pl'
  // when zoom: 0 : 'pl' is nicer
  "terminal.integrated.fontFamily": "'consolas', 'cascadia code mono', Consolas,  monospace",
  "terminal.integrated.fontFamily": "'cascadia code', 'cascadia code mono', Consolas,  monospace",

  "terminal.integrated.fontSize": 18,
  "terminal.integrated.fontSize": 16,
  "terminal.integrated.fontSize": 14,
  "markdownlint.customRules": [
    "{docsmsft.docs-linting}/markdownlint-custom-rules/rules.js"
  ],
  "editor.bracketPairColorization.enabled": true,
  "editor.lineNumbers": "relative", // weird
  "editor.lineNumbers": "interval", // cleaner
  // "editor.lineHeight": 25, // 0-8 are multipliers, > 8 are literal px sizes
  "notebook.lineNumbers": "off",
  "zenMode.hideLineNumbers": true,
  "zenMode.centerLayout": true,
  "zenMode.fullScreen": false,
  "zenMode.hideActivityBar": true,
  "zenMode.hideStatusBar": true,
  "zenMode.hideTabs": true,
  "zenMode.restore": true,
  "zenMode.silentNotifications": true, // true shows only errors

  "testing.gutterEnabled": true,
  "testExplorer.gutterDecoration": true,
  "testing.defaultGutterClickAction": "run", // default
  "testing.defaultGutterClickAction": "debug",
  "testing.defaultGutterClickAction": "contextMenu",
  "docs-visual-areas.gutterIndicatorHeight": 100,
  "docs-visual-areas.gutterIndicatorOpacity": 60,
  "docs-visual-areas.gutterIndicatorOffset": 12,
  "docs-visual-areas.gutterIndicatorWidth": 4,
  "editor.semanticHighlighting.enabled": true,
  "errorLens.enabled": true,
  "errorLens.gutterIconsEnabled": true,
  "powershell.codeFormatting.preset": "OTBS",
  "powershell.codeFormatting.trimWhitespaceAroundPipe": true,
  "powershell.codeFormatting.useConstantStrings": true,
  "powershell.codeFormatting.useCorrectCasing": true,
  "powershell.codeFormatting.whitespaceBetweenParameters": true,
  "powershell.integratedConsole.suppressStartupBanner": true,
  "powershell.pester.debugOutputVerbosity": "Detailed",
  "powershell.pester.outputVerbosity": "Detailed",
  "powershell.pester.useLegacyCodeLens": false,
  // "pester.autoRunOnSave": true,
  "powershell.promptToUpdatePowerShell": false,
  "window.titleSeparator": " ┐ ",
  // "window.title": "${dirty}${activeEditorShort}${separator}${rootName}${separator}${appName}",

  // this is a decent compromise to make both workspace and non-workspace titles short-ish and readable
  "window.title": "${dirty}${activeEditorShort} 📄 ${rootName} 📁 ${activeEditorShort}",
  // 📄📁⁞ ┐⇽

  /*
    
    ### Sect: Screencasting
    
           tags: Screencasting
    
    */

  "screencastMode.fontSize": 20,
  "screencastMode.onlyKeyboardShortcuts": true,
  "screencastMode.verticalOffset": 40,
  "screencastMode.keyboardOverlayTimeout": 600,
  "screencastMode.mouseIndicatorSize": 60,
  "screencastMode.mouseIndicatorColor": "#ff8800a4",

  /*
    
    ### Sect: Mouse and Scrolling
    
           tags: scrollbar, mouse, sensitivity
    
    */
  "editor.scrollbar.verticalScrollbarSize": 4,
  "editor.scrollbar.vertical": "hidden",
  "editor.scrollBeyondLastLine": true,
  "output.smartScroll.enabled": true,
  "editor.fastScrollSensitivity": 5,
  "editor.mouseWheelScrollSensitivity": 1,
  "editor.scrollbar.horizontal": "auto",
  "editor.scrollbar.horizontalScrollbarSize": 8,
  "terminal.integrated.fastScrollSensitivity": 5,
  "terminal.integrated.mouseWheelScrollSensitivity": 1,
  "workbench.list.fastScrollSensitivity": 5,
  "workbench.list.mouseWheelScrollSensitivity": 1,

  "colorHelper.formatsOrder": ["hsl", "hex", "rgb"],
  "workbench.commandPalette.history": 50,
  "workbench.commandPalette.preserveInput": true,

  /*
    
    ### Sect: Default Workbench Colors
    
           tags: color, reference, theme
    
    from defaults/theme. some are default 
    I assume because they were commented out?


        //"editorBracketHighlight.foreground1": "#ffd700",
        //"editorBracketHighlight.foreground2": "#da70d6",
        //"editorBracketHighlight.foreground3": "#179fff",
        //"editorBracketHighlight.foreground4": "#00000000",
        //"editorBracketHighlight.foreground5": "#00000000",
        //"editorBracketHighlight.foreground6": "#00000000",
        //"editorBracketHighlight.unexpectedBracket.foreground": "#ff1212cc",
        //"editorBracketMatch.background": "#0064001a",
        //"editorBracketMatch.border": "#888888",
    */

  /*
    Note: Some of these settings auto-delete when you toggle them off and on again.
    that is why I have their names copied here

        "editor.minimap.enabled": false,
        "editor.inlineSuggest.enabled": true,
        "outline.icons": false,
        "workbench.activityBar.visible": false,
    */

  "editor.minimap.enabled": true,
  "editor.minimap.enabled": false, // for clean, default this off
  "editor.minimap.size": "fill",
  "editor.minimap.size": "fit",
  "editor.minimap.showSlider": "mouseover",
  "editor.inlineSuggest.enabled": true,
  "outline.icons": false,
  "outline.icons": true,
  "editor.selectionHighlight": true,
  "editor.find.autoFindInSelection": "multiline",
  "workbench.editor.showTabs": false, // cleaner
  "workbench.editor.showTabs": true,

  "powershell.startAutomatically": true,
  "testExplorer.onStart": null,
  "testExplorer.addToEditorContextMenu": true,
  //    "testing.automaticallyOpenPeekView": "never",
  "testing.automaticallyOpenPeekView": "never",
  "testing.automaticallyOpenPeekViewDuringAutoRun": false,
  "terminal.explorerKind": "integrated",
  "terminal.integrated.copyOnSelection": true,
  "terminal.integrated.defaultLocation": "editor",
  "search.seedWithNearestWord": true,

  /*
    
    ### Sect: Workbench Color Overrides
    
           tags: color, theme
    
    */

  "workbench.colorCustomizations": {
    // "editorError.background": "#1cf0864f",
    "errorLens.warningMessageBackground": "#2f323813",
    "errorLens.warningMessageBackground": "#ff880000",
    "errorLens.warningMessageBackground": "#ff942f19", // # def
    "errorLens.warningMessageBackground": "#ff88001e",
    "errorLens.warningMessageBackground": "#5f2d448c", // interesting pinkish
    "errorLens.warningMessageBackground": "#362B1F", // default ?
    "errorLens.warningMessageBackground": "#362b1f6b", // dim
    "errorLens.warningBackground": "#ff000000", // invisible BG
    "errorLens.errorForeground": "#ff0000b6",
    "errorLens.errorForeground": "#f77777ad", // peach
    "errorLens.errorForeground": "#f77777ad",
    // "errorLens.statusBarErrorForeground": "#00f853",
    // "errorLens.statusBarIconErrorForeground": "#00f853", //has do do with selected/found lines
    // "errorLens.hintBackground": "#25cf50", //has do do with selected/found lines

    // "errorLens.errorMessageBackground": "#c8ff02e8",
    "errorLens.errorMessageBackground": "#332424", // default:#332424
    "errorLens.errorMessageBackground": "#e4545419",
    "errorLens.errorBackground": "#362b1f6b", // default:#332424
    "errorLens.errorBackground": "#362b1f34", // dim
    "errorLens.warningForeground": "#F2962D", // orange default
    "errorLens.warningForeground": "#f2962d32", // default -> dim 2x + brown
    // "errorLens.warningForeground": "#ff0cb66c", // default -> dim 1x + purp
    "errorLens.infoForeground": "#ea00ff", // this is where?
    "errorLens.hintForeground": "#ff16d8", // this is where?

    // custom dim theme

    "editorBracketHighlight.foreground1": "#ffffff80", // dim gray
    "editorBracketHighlight.foreground1": "#ffd780", // # dim
    "editorBracketHighlight.foreground1": "#ffd780", // #def
    "editorBracketHighlight.foreground2": "#da70d6", //def
    "editorBracketHighlight.foreground2": "#da70d686", // dim
    "editorBracketHighlight.foreground3": "#179fff", // def
    "editorBracketHighlight.foreground3": "#179f80", // dim
    // default cycles after 3
    "editorBracketHighlight.foreground4": "#ff0065", // magenta
    "editorBracketHighlight.foreground4": "#ffffff80", // dim gray
    // "editorBracketHighlight.foreground5": "#ff0080",
    // "editorBracketHighlight.foreground5": "#ff0040",
    // "editorBracketHighlight.foreground6": "#ff0040",
    // "editorBracketHighlight.foreground6": "#ff0040",
    //sep

    // "editorBracketHighlight.unexpectedBracket.foreground": "#ff1212cc",

    "editorBracketMatch.border": "#888888",
    // work bench tests

    // "editorLineNumber.foreground": "#ff0000",
    // "editorLineNumber.foreground": "#487285", // dim: blueish foreground color
    "editorLineNumber.foreground": "#858585", // default: gray fade
    "editorLineNumber.foreground": "#858585a1", // dim
    "editorLineNumber.foreground": "#4e4e4ea1", // default: gray fade
    // "editorLineNumber.activeForeground": "#609AB2", // blueish foreground color
    // "editorLineNumber.activeForeground": "#6ad4ee",
    "editorLineNumber.activeForeground": "#c6c6c6", // def: fg
    "editorLineNumber.activeForeground": "#929292", // dim

    /*
    
    ### Sect: JustinGrote's pester theme
    
           tags: theme, pester, testing

          from: <https://discord.com/channels/180528040881815552/446531919644065804/911758649897127976>
    
    */

    "editorBracketHighlight.foreground1": "#569CD6",
    "editorBracketHighlight.foreground2": "#C586C0",
    "editorBracketHighlight.foreground3": "#4EC9B0",
    "editorBracketHighlight.foreground4": "#CE9178",
    "errorLens.errorBackground": "#e4545410",
    "errorLens.errorForeground": "#ff646440",
    "errorLens.errorMessageBackground": "#e4545405",
    "errorLens.warningBackground": "#ff942f10",
    "errorLens.warningForeground": "#fa973a70",
    "testing.message.error.decorationForeground": "#ff646440",
    "testing.message.error.lineBackground": "#e4545405",
    "errorLens.warningMessageBackground": "#fff00005",
    "tab.lastPinnedBorder": "#2472c8",
    "terminal.ansiBlack": "#000000",
    "terminal.ansiBlue": "#2472c8",
    "terminal.ansiBrightBlack": "#666666",
    "terminal.ansiBrightBlue": "#569cd6",
    "terminal.ansiBrightCyan": "#9cdcfe",
    "terminal.ansiBrightGreen": "#b5cea8",
    "terminal.ansiBrightMagenta": "#daadd6",
    "terminal.ansiBrightRed": "#f14c4c",
    "terminal.ansiBrightWhite": "#e5e5e5",
    "terminal.ansiBrightYellow": "#DCDCAA",
    "terminal.ansiCyan": "#11a8cd",
    "terminal.ansiGreen": "#6a9955",
    "terminal.ansiMagenta": "#C586C0",
    "terminal.ansiRed": "#cd3131",
    "terminal.ansiWhite": "#e5e5e5",
    "terminal.ansiYellow": "#CE9178",
    "terminal.background": "#1E1E1E",
    "terminal.foreground": "#D4D4D4",
    "editor.lineHighlightBackground": "#1073cf2d",
    "editor.lineHighlightBorder": "#9fced11f"

    /*
      
      ### Sect: end of JustinGrote theme
      
      */
    },
    "editor.tokenColorCustomizations": {
      "[Default Dark+]": {
        "textMateRules": [
          {
            "scope": [
              "punctuation.section.bracket.begin.powershell",
              "punctuation.section.bracket.end.powershell"
            ],
            "settings": {
              "foreground": "#569CD6"
            }
          }
        ]
      }
      /*
        
        ### Sect: end of JustinGrote theme
        
        */
      },
      "editor.semanticTokenColorCustomizations": {
        "[Default Dark+]": {
          "enabled": true,
          "rules": {
            "punctuation.section.bracket.begin.powershell": "#569CD6",
            "punctuation.section.bracket.end.powershell": "#569CD6"
          }
        }
        /*
          
          ### Sect: end of JustinGrote theme
          
          */
  },

  /*
    
    ### Sect: theme: subtler error lens
    
           tags: Tag1, Tag2
    
    */
  // "editorBracketMatch.background": "#0064001a",
  // "editorBracketMatch.background": "#00ff001a",
  // "errorLens.infoGutterIconPath": ,
  "errorLens.errorGutterIconColor": "#e45454",
  "errorLens.infoGutterIconPath": "",
  "errorLens.errorGutterIconPath": "",
  "errorLens.warningGutterIconColor": "#ff942f",
  "errorLens.warningGutterIconPath": "",

  // "errorLens.errorMessageBackground": "#e4545419",
  // "errorLens.warningMessageBackground": "#ff942f19",
  // "errorLens.infoMessageBackground": "#00b7e419",
  // "errorLens.hintMessageBackground": "#17a2a219",

  // "errorLens.errorBackground": "#7354e40a",
  // "errorLens.errorBackground": "#e4545417",
  // "errorLens.errorBackground": "#c8ff02e8",

  "errorLens.statusBarColorsEnabled": true, // not sure what this is
  // "errorLens.warningMessageBackground": "#ff880011",
  // "errorLens.warningBackground": "#e454540a",
  // "errorLens.warningBackground": "#ff880011",
  // "errorLens.warningForeground": "#e454540a",

  // "errorLens.background": "#2f323813",

  // "errorLens.infoMessageBackground": "#00b7e419",
  // "errorLens.hintMessageBackground": "#17a2a219",
  "errorLens.gutterIconSet": "default",
  "errorLens.gutterIconSet": "defaultOutline",
  "errorLens.gutterIconSet": "borderless",
  "errorLens.gutterIconSet": "circle",
  "errorLens.gutterIconsFollowCursorOverride": false, // show just selected errors or whole file?
  "errorLens.gutterIconsFollowCursorOverride": true, // show just selected errors or whole file?
  "errorLens.enabledDiagnosticLevels": ["error", "hint", "warning", "info"],

  "errorLens.fontWeight": 200,
  "errorLens.delay": 2500,
  "errorLens.fontFamily": "calibri",
  // "editor.fontWeight": "300",
  // "editor.fontWeight": "400",
  // "editor.fontWeight": "300",
  // "editor.fontWeight": "200",
  // "editor.fontWeight": "100",
  "errorLens.fontSize": "15",
  "errorLens.fontSize": "80%",
  "editor.codeLensFontSize": 12,
  "editor.inlayHints.fontSize": 10,
  "editor.overviewRulerBorder": true, // not sure what it does
  "errorLens.borderRadius": 400,
  "errorLens.warningGutterIconColor": "#ff942f", // def: #ff942f
  "errorLens.warningGutterIconColor": "#ff932f6e", // dim: 1x
  "errorLens.warningGutterIconColor": "#ff932f3b", // dim: 2x
  "errorLens.followCursor": "allLines",
  "errorLens.followCursor": "closestProblem",
  "errorLens.followCursorMore": 2,
  "errorLens.infoGutterIconColor": "#d46f6f",
  "errorLens.infoGutterIconColor": "#00b7e4",
  "errorLens.errorGutterIconColor": "#e45454", // #def
  "errorLens.errorGutterIconPath": "",
  "errorLens.gutterIconSize": "50%", // Change gutter icon size. Examples: auto, contain, cover, 50%, 150%

  // filters
  "errorLens.exclude": [
    // "is an alias of"
  ],

  // For which languages indent-rainbow should be activated (if empty it means all).
  "indentRainbow.dsf": ["python"], // for example ["nim", "nims", "python"]

  // For which languages indent-rainbow should be deactivated (if empty it means none).
  // "indentRainbow.excludedLanguages": ["powershell", "plaintext"],

  // The delay in ms until the editor gets updated.
  "indentRainbow.updateDelay": 100, // 10 makes it super fast but may cost more resources
  // Defining custom colors instead of default "Rainbow" for dark backgrounds.
  // (Sorry: Changing them needs an editor restart for now!)
  "indentRainbow.colors": [
    "rgba(255,255,64,0.07)",
    "rgba(127,255,127,0.07)",
    "rgba(255,127,255,0.07)",
    "rgba(79,236,236,0.07)"
  ],

  // The indent color if the number of spaces is not a multiple of "tabSize".
  "indentRainbow.errorColor": "rgba(128,32,32,0.6)",

  // The indent color when there is a mix between spaces and tabs.
  // To be disabled this coloring set this to an empty string.
  "indentRainbow.tabmixColor": "rgba(128,32,96,0.6)",

  "[powershell]": {
    "editor.semanticHighlighting.enabled": false,
    "editor.semanticHighlighting.enabled": true,
    "debug.saveBeforeStart": "nonUntitledEditorsInActiveGroup",
    "editor.wordSeparators": "`~!@#$%^&*()=+[{]}\\|;:'\",.<>/?",
    "editor.formatOnSave": true,
    // if autoIndent is set to 'full' it breaks indentation on 'move line up/down'
    "editor.autoIndent": "advanced"
  },

  //  Skip error highlighting for some or all languages. For example, you may want to turn off the indent errors for markdown and haskell (which is the default)

  // Skip error highlighting for RegEx patterns. For example, you may want to turn off the indent errors for JSDoc's valid additional space (disabled by default), or comment lines beginning with //
  // Example of regular expression in JSON (note double backslash to escape characters)
  "indentRainbow.ignoreLinePatterns": [
    "/[ \t]* [*]/g", // lines begining with <whitespace><space>*
    "/[ \t]+[/]{2}/g" // lines begininning with <whitespace>//
  ],

  "indentRainbow.ignoreErrorLanguages": ["json", "markdown", "haskell"],

  "[powerquery]": {
    "editor.formatOnSave": false
  },
  "files.associations": {
    "*.json": "jsonc"
  },

  /*
    
    ### Sect: Brackets and Guides and Rulers
    
           tags: brackets, guides, rulers, pair
    
    */

  "debug.showBreakpointsInOverviewRuler": true,
  "editor.hideCursorInOverviewRuler": true,

  // Controls whether bracket pair guides are enabled or not.
  // vertical thin line
  "editor.guides.bracketPairs": true,

  // Controls whether the editor should highlight the active indent guide.
  "editor.guides.highlightActiveIndentation": false,
  "editor.guides.highlightActiveIndentation": true,
  "git.countBadge": "tracked",

  // Controls whether the editor should render indent guides.
  "editor.guides.indentation": true,

  // Controls whether the cursor should be hidden in the overview ruler.
  "editor.hideCursorInOverviewRuler": false,

  // Controls the delay in milliseconds after which the hover is shown.
  "editor.hover.delay": 300,

  // Controls whether the hover is shown.
  "editor.hover.enabled": true,

  // "editor.gotoLocation.*":

  /*
    
    ### Sect: Addon 🔧 Git Lens
    
           tags: git, color
    
    */
  "gitlens.advanced.abbreviatedShaLength": 7,
  "gitlens.advanced.quickPick.closeOnFocusOut": true,
  "gitlens.advanced.messages": {
    // currently the defaultes
    "suppressCommitHasNoPreviousCommitWarning": false,
    "suppressCommitNotFoundWarning": false,
    "suppressCreatePullRequestPrompt": false,
    "suppressDebugLoggingWarning": false,
    "suppressFileNotUnderSourceControlWarning": false,
    "suppressGitDisabledWarning": false,
    "suppressGitMissingWarning": false,
    "suppressGitVersionWarning": false,
    "suppressImproperWorkspaceCasingWarning": false,
    "suppressLineUncommittedWarning": false,
    "suppressNoRepositoryWarning": false,
    "suppressRebaseSwitchToTextWarning": false
  },
  "editor.codeLens": true,

  "editor.codeLensFontFamily": "'consolas', 'cascadia code pl', 'fira code retina', 'calibri', sans",
  // "editor.inlayHints.fontFamily": "",

  "editor.fontLigatures": true,
  "editor.hover.sticky": true,
  "prettier.requireConfig": true,
  "prettier.configPath": "C:/Users/cppmo_000/SkyDrive/Documents/2021/dotfiles_git/web/prettier/.prettierrc", // # this actually prevents other formats
  // "prettier.printWidth": 140,
  // "prettier.proseWrap": "preserve",
  // "prettier.tabWidth": 4,
  // "prettier.useTabs": true,
  // "prettier.documentSelectors": ["*.json", "*.jsonc"],
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  "pesterExplorer.autoDiscoverOnOpen": true, // todo:  ask kwhat the multiple toggles should be
  "diffEditor.ignoreTrimWhitespace": false,
  "powershell.codeFormatting.autoCorrectAliases": true,
  "pester.suppressCodeLensNotice": true,
  "testExplorer.useNativeTesting": true,
  "powershell.codeFormatting.ignoreOneLineBlock": false,
  "editor.suggest.showStatusBar": true,

  /*
  
  ### Sect: vscode icons
  
         tags: icons
  
  */

  "workbench.iconTheme": "vscode-icons",
  /*
    
    ### Sect: vscode-icons
    
           tags: Addon, Icons
    
    */

  "vsicons.associations.files": [
    // justin grote's config: <https://discord.com/channels/180528040881815552/447476910499299358/801102446209794088>
    {
      "extensions": ["arm.json"],
      "format": "svg",
      "icon": "azure"
    },
    {
      "icon": "text", // or any other icon from vscode-icons
      "extensions": ["ans", "ansi"],
      "format": "svg"
    },
    {
      "extensions": ["parameters.json"],
      "format": "svg",
      "icon": "config"
    },
    {
      "extensions": ["tests.ps1"],
      "format": "svg",
      "icon": "test"
    },
    {
      "extensions": ["clixml"],
      "format": "svg",
      "icon": "xml"
    }
  ],
  "vsicons.associations.folders": [
    {
      "extends": "dist",
      "extensions": ["BuildOutput", "Output"],
      "format": "svg",
      "icon": "dist"
    },
    {
      "extends": "helper",
      "extensions": ["BuildHelpers"],
      "format": "svg",
      "icon": "helper"
    }
  ],
  "editor.suggest.insertMode": "replace",
  "editor.snippetSuggestions": "bottom"
}
