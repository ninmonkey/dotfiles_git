{
    /*

### Sect: About

    Profile:            Jake, Desktop.
    Original Rewrite:   2021-05-07
    This is the *very* verbose version of the config file

    Generate Table Of Contents using:
        rg '\s*###*\s*(SubSect|Sect):\s*(?P<Title>.*$)' -- "$src"
    or
        rg '\s*###*\s*(S\w+):\s*(?P<Title>.*$)' -- "$src"

    */
    /*
### Sect: Config Settings to Experiment with

    */
    "terminal.integrated.automationShell.windows": null,
    // "powershell.developer.featureFlags": null,
    "powershell.helpCompletion": "LineComment", // what does it do?
    "powershell.integratedConsole.showOnStartup": true,
    // "powershell.developer.waitForSessionFileTimeoutSeconds": 240,
    "powershell.pester.debugOutputVerbosity": "Diagnostic",
    "powershell.pester.outputVerbosity": "FromPreference",
    "terminal.integrated.allowWorkspaceConfiguration": false,
    "terminal.integrated.sendKeybindingsToShell": false,
    "editor.mouseWheelScrollSensitivity": 2,
    "terminal.integrated.mouseWheelScrollSensitivity": 2,
    // "terminal.integrated.cwd": "",
    "terminal.integrated.environmentChangesRelaunch": true,
    "terminal.integrated.experimentalLinkProvider": true,
    // will this prevent prompt from synapse (venv) automatically changing your prompt
    "python.analysis.typeCheckingMode": "basic",
    "python.terminal.activateEnvInCurrentTerminal": false,
    "python.terminal.activateEnvironment": false,
    "debug.openExplorerOnEnd": true,
    "debug.focusWindowOnBreak": true,
    "editor.selectionHighlight": true,
    "editor.autoSurround": "languageDefined",
    "editor.autoClosingBrackets": "beforeWhitespace",
    "editor.autoClosingOvertype": "always",
    "editor.trimAutoWhitespace": true,
    "editor.dragAndDrop": true,
    "editor.fontSize": 16,
    "powershell.promptToUpdatePowerShell": false,
    "powershell.codeFormatting.pipelineIndentationStyle": "IncreaseIndentationForFirstPipeline",
    "powershell.codeFormatting.useConstantStrings": true,
    "powershell.integratedConsole.suppressStartupBanner": true,
    "editor.snippetSuggestions": "none",
    "editor.renderWhitespace": "none",
    "editor.renderControlCharacters": true,
    "breadcrumbs.symbolSortOrder": "type",
    "editor.wordWrapColumn": 160,
    "editor.wrappingIndent": "deepIndent",
    "editor.detectIndentation": false,
    "editor.fontSize": 16,
    "editor.fontFamily": "'cascadia code', Consolas, 'Courier New', monospace",
    /*

# h1: Real Config Starts Here

    */
    /*

# h1: Experimenting

    */
    "terminal.integrated.automationShell.windows": null,
    // "powershell.developer.featureFlags": null,
    "powershell.helpCompletion": "LineComment", // what does it do?
    "powershell.integratedConsole.showOnStartup": true,
    // "powershell.developer.waitForSessionFileTimeoutSeconds": 240,
    "powershell.pester.debugOutputVerbosity": "Diagnostic",
    "powershell.pester.outputVerbosity": "FromPreference",
    "terminal.integrated.allowWorkspaceConfiguration": false,
    "terminal.integrated.sendKeybindingsToShell": false,
    "editor.mouseWheelScrollSensitivity": 2,
    "terminal.integrated.mouseWheelScrollSensitivity": 2,
    // "terminal.integrated.cwd": "",
    "terminal.integrated.environmentChangesRelaunch": true,
    "terminal.integrated.experimentalLinkProvider": true,
    "terminal.integrated.letterSpacing": 0,
    "terminal.integrated.lineHeight": 0,
    "powershell.enableProfileLoading": true, // applies to [intellisense and term] but *not* [debug]
    "terminal.integrated.rightClickBehavior": "copyPaste",
    "terminal.integrated.scrollback": 4000,
    "terminal.integrated.showExitAlert": false,
    "terminal.integrated.tabs.enabled": true,
    "terminal.integrated.tabs.focusMode": "doubleClick",
    "terminal.integrated.tabs.hideCondition": "singleTerminal",
    "terminal.integrated.tabs.location": "right", // values are the inverse of the side you want tabs
    "terminal.integrated.tabs.showActiveTerminal": "singleTerminalOrNarrow",
    "terminal.integrated.tabs.showActiveTerminal": "singleTerminalOrNarrow",
    "search.collapseResults": "auto", //"alwaysCollapse", alwaysExpand, auto
    "search.actionsPosition": "right",
    "search.mode": "view", //"reuseEditor",//"newEditor",
    "search.quickOpen.history.filterSortOrder": "default", //"recency",
    "search.searchEditor.defaultNumberOfContextLines": 1,
    "search.searchOnType": true,
    "search.seedOnFocus": true, // [ctrl+f] will use the current selection as the base
    "search.searchEditor.reusePriorSearchConfiguration": false,
    "search.smartCase": false,
    "search.sortOrder": "modified", //"type",//"modified",//"fileNames",//"default",//"countDescending",//"countAscending",//"type",
    "search.useIgnoreFiles": true,
    "search.useReplacePreview": true,
    "search.searchEditor.doubleClickBehaviour": "openLocationToSide", //"selectWord",//"openLocationToSide",//"goToLocation",
    // "editor.codeActionsOnSave":{
    //     "source.fixAll": true,
    //     "source.organizeImports": true
    // },
    "debug.console.wordWrap": true,
    "debug.console.historySuggestions": false, // huge impact on removing 'spam' in debug's intellisense
    "debug.console.closeOnEnd": true,
    "debug.console.collapseIdenticalLines": true,
    "editor.copyWithSyntaxHighlighting": true,
    "editor.codeLensFontFamily": "'arial', 'cascadia code'", // this changes "run tests" inside .ps1 pester blocks
    "editor.codeLensFontSize": 14,
    "editor.codeLens": true,
    // "editor.cursorSurroundingLines": 10,
    // "editor.cursorSurroundingLinesStyle": "all",
    "editor.columnSelection": false,
    "editor.find.seedSearchStringFromSelection": true,
    "editor.find.cursorMoveOnType": true,
    "editor.fontLigatures": true,
    "editor.folding": true,
    "editor.foldingHighlight": true, //collapsed folded blocks highlight the single line
    "editor.foldingStrategy": "auto",
    "editor.showFoldingControls": "mouseover", // hide icons until you hover the gutter
    "editor.highlightActiveIndentGuide": true, // highight **just one** specific line-block (the current block)
    // "editor.fontWeight": "normal", // bold 300, 900,
    "editor.hover.delay": 300, // 10, 710,
    "editor.hover.enabled": true, // false,
    // "editor.hover.sticky": false,
    "editor.inlineHints.enabled": true, // does what? doesn't seem to be "run tests" or "linting"
    "editor.inlineHints.fontFamily": "'cascadia code', Consolas, 'Courier New', monospace",
    "editor.lightbulb.enabled": true,
    // "editor.occurrencesHighlight": true,
    // "editor.overviewRulerBorder": true, // overview does what?
    // "editor.hideCursorInOverviewRuler": true, // does what?
    "editor.minimap.enabled": true,
    //
    // mode: small right
    "editor.minimap.renderCharacters": true,
    "editor.minimap.maxColumn": 70,
    //
    // mode: renderBlocks wide
    "editor.minimap.renderCharacters": false,
    // "debug.focusWindowOnBreak": true,
    "editor.minimap.maxColumn": 140,
    // "editor.minimap.scale": 2, // nice on large monitor
    "editor.minimap.showSlider": "always",
    "editor.minimap.showSlider": "mouseover",
    //
    // mode: small left
    "editor.minimap.side": "left",
    "editor.minimap.maxColumn": 70,
    "editor.linkedEditing": true,
    "editor.matchBrackets": "near",
    "editor.matchBrackets": "always", // shows the block you're in, without touching bracket
    // "editor.minimap.size": ,
    // "editor.inlineHints.fontSize": 0,
    // "editor.padding.bottom": 0,
    // "editor.padding.top": 0,
    "editor.parameterHints.cycle": true,
    "editor.parameterHints.enabled": true,
    "editor.peekWidgetDefaultFocus": "tree",
    // "editor.quickSuggestions": false | true | Obj
    "editor.quickSuggestions": {
        "other": true,
        "comments": false,
        "strings": false
    },
    "editor.quickSuggestionsDelay": 10,
    "diffEditor.ignoreTrimWhitespace": true,
    // more: "diffEditor.*"
    // "workbench.editor.limit.value": 10,
    // 20 more: "workbench.editor.*"
    // "workbench.editor.untitled.hint": "text",
    // "explorer.openEditors.sortOrder": "alphabetical",
    // "editor.stickyTabStops": false,
    "editor.wrappingStrategy": "simple",
    "editor.wordBasedSuggestions": true,
    "editor.wordBasedSuggestionsMode": "allDocuments",
    "editor.wordBasedSuggestionsMode": "matchingDocuments",
    /*

    editor: suggest
        https://code.visualstudio.com/docs/editor/intellisense#_customizing-intellisense

    */
    "editor.suggest.showWords": false, // first test
    "editor.suggest.showKeywords": true,
    // "editor.wordSeparators": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?", // do not use 'simple' drives me crazy
    "diffEditor.wordWrap": "inherit",
    "editor.suggestSelection": "first",
    "editor.suggestSelection": "recentlyUsedByPrefix",
    /*
    Can I make person JSON config rules?

    "json.schemas": [
        {
            "fileMatch": [
                "/myfile"
            ],
            "url": "schemaURL"
        }
    ],
    */
    /*
    html.format.wrapAttributes
        "aligned-multiple"              // Wrap when line length is exceeded, align attributes vertically.
        "auto"                          // Wrap attributes only when line length is exceeded.
        "force"                         // Wrap each attribute except first
        "force-aligned"                 // Wrap each attribute except first and keep aligned.
        "force-expand-multiline         // Wrap each attribute
        "preserve",                     // Preserve wrapping of attributes
        "preserve-aligned",             // Preserve wrapping of attributes but align

        */
    "html.format.wrapAttributes": "auto",
    "editor.definitionLinkOpensInPeek": true,
    /*
    this mode is a bit crazy, adds a dynamic pane
    showing your 'calculated defaults' relative the selected file on
    the right (user/workspace/folder)
    */
    "workbench.settings.useSplitJSON": true,
    "workbench.settings.useSplitJSON": false,
    "editor.snippetSuggestions": "none",
    "window.confirmBeforeClose": "keyboardOnly", // https://code.visualstudio.com/updates/v1_51#_prevent-accidental-close
    "window.newWindowDimensions": "offset",
    "window.confirmBeforeClose": "keyboardOnly", // https://code.visualstudio.com/updates/v1_51#_prevent-accidental-close
    "window.restoreWindows": "all",
    "window.restoreWindows": "preserve",
    "workbench.settings.openDefaultSettings": false,
    // "python.defaultInterpreterPath": "C:\\Program Files (x86)\\Python36-32\\python.exe",
    /*

###### SubSect: Truly Experimental

    */
    "search.experimental.searchInOpenEditors": true,
    "python.insidersChannel": "weekly",
    /*

###### SubSect: Notebooks: ⇢ .ipynb, Jupyter, nteract, ...

    see also settings:
        powershell.notebooks.*

    /*
    "notebook.breadcrumbs.showCodeCells": and
    "notebook.outline.showCodeCells":
            https://code.visualstudio.com/updates/v1_53#_outline-and-breadcrumbs

        */
    "notebook.breadcrumbs.showCodeCells": true,
    "notebook.outline.showCodeCells": true,
    // "powershell.notebooks.saveMarkdownCellsAs": "LineComment",
    /*

###### SubSect: Editor ⇢ Tabs, Pins, Icons, Decorations

    */
    "workbench.editor.showTabs": false,
    "workbench.editor.showTabs": true, // default
    "workbench.editor.showIcons": false,
    "workbench.editor.showIcons": true, // default
    // see: <https://code.visualstudio.com/updates/v1_53#_wrap-tabs>
    "workbench.editor.wrapTabs": false, // default
    // "workbench.editor.tabSizing": "shrink", // super important if you 'wrapTabs'
    // "workbench.editor.tabSizing": "fit", // super important if you 'wrapTabs'
    "workbench.editor.tabSizing": "fit", // super important if you 'wrapTabs'
    // "workbench.editor.wrapTabs": true,
    /*
    "workbench.editor.pinnedTabSizing":
    Controls the sizing of pinned editor tabs. Pinned tabs are sorted to the beginning of all opened tabs and typically do not close until unpinned. This value is ignored when #workbench.editor.showTabs# is disabled.
    "compact":      A pinned tab will show in a compact form with only icon or first letter of the editor name.
    "normal":       [default] A pinned tab inherits the look of non pinned tabs.
    "shrink":       A pinned tab shrinks to a compact fixed size showing parts of the editor name.
    */
    "workbench.editor.pinnedTabSizing": "shrink",
    "workbench.editor.pinnedTabSizing": "normal", // default
    "workbench.editor.decorations.colors": true,
    "workbench.editor.decorations.badges": true,
    "workbench.editor.enablePreviewFromCodeNavigation": true,
    /*

###### SubSect: Searching

    */
    /*

    "search.mode":
            Default search mode

            The search.mode setting is now available to allow configuring what search UI commands like Search: Find in Files, and the explorer's Find in Folder... and Find in Workspace context menu entries use,

        "view"             Search in the search view, either in the panel or sidebar.
        "newEditor"        Search in a new search editor
        "reuseEditor"      Search in an existing search editor if present, otherwise in a new search editor

    */
    // "search.mode": "view",
    // "search.mode": "reuseEditor",
    "search.searchEditor.doubleClickBehaviour": "goToLocation", // "openLocationToSide", "goToLocation"
    "search.searchEditor.defaultNumberOfContextLines": 1, // grep -C <n>
    "search.searchEditor.reusePriorSearchConfiguration": true,
    "search.mode": "newEditor",
    "powershell.codeFormatting.whitespaceBetweenParameters": false,
    "editor.snippetSuggestions": "none",
    "editor.links": true,
    // "editor.glyphMargin": true,
    // "editor.fontWeight": "normal",
    // schema for Powershell
    /*

### Sect: Real Config Starts Here

    */
    /*

### Sect: Suggestions, Intellisence, Autocomplete, Completers

    */
    "workbench.settings.openDefaultSettings": false,
    // "editor.colorDecorators": true,
    "editor.suggest.filterGraceful": true,
    "editor.suggest.localityBonus": true,
    // "editor.acceptSuggestionOnEnter": "smart",
    "editor.suggest.showFields": true,
    // "editor.suggest.snippetsPreventQuickSuggestions": false,
    "editor.links": true,
    /*

### Sect: Clipboard: Copy Paste

    */
    "terminal.integrated.copyOnSelection": false, // this might be the cause of the copy paste issues
    // "editor.copyWithSyntaxHighlighting": true,
    "editor.emptySelectionClipboard": false,
    /*

### Sect: Git, Github

    */
    /*
    "git:*"
        <https://code.visualstudio.com/updates/v1_53#_git-new-settings>
        "git.autofetch"
        "git.ignoreRebaseWarning"
        "git.requireGitUserConfig"
    */
    // "git.autofetch": false,           // all | true | false
    "git.ignoreRebaseWarning": false, // [default]false | true
    "git.requireGitUserConfig": true, // [def]true | false
    /*

### Sect: Log Levels and Trace / tracing

    */
    "powershell.developer.editorServicesLogLevel": "Diagnostic",
    "powerquery.trace.server": "off",
    "powerquery.trace.server": "verbose",
    "python.analysis.logLevel": "Warning", // error/warnining/info/trace
    // "powershell editor services.trace.server": "verbose",
    // "powershell editor services.trace.server": "diagnostic",
    /*

### Sect: Language Config

    */
    // "markdown.extension.orderedList.autoRenumber": true,
    "[python]": {
        "gitlens.codeLens.symbolScopes": [
            "!Module"
        ],
        // "editor.quickSuggestions": {
        //     "strings": true
        // },
        "editor.semanticHighlighting.enabled": true,
        "editor.wordBasedSuggestions": false,
        "editor.defaultFormatter": "ms-python.vscode-pylance",
        "editor.formatOnSave": true,
        "editor.formatOnSaveMode": "modifications",
        "editor.formatOnType": false,
    },
    "[jsonc]": {
        "editor.quickSuggestions": {
            "strings": true
        },
        "editor.defaultFormatter": "vscode.json-language-features",
        "editor.formatOnSave": true,
        "editor.formatOnPaste": false
    },
    "[json]": {
        "editor.quickSuggestions": {
            "strings": true,
        },
        // "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.defaultFormatter": "vscode.json-language-features",
        "editor.formatOnSave": true,
        "editor.formatOnPaste": false,
        // "editor.formatOnType": true,
        "editor.formatOnPaste": false,
        "editor.semanticHighlighting.enabled": true,
        // "editor.maxTokenizationLineLength": 20000
        "editor.detectIndentation": false,
        "editor.tabSize": 4,
    },
    "workbench.tree.indent": 14, //  # might be good for XML / JSON that's nested
    "[xml]": {
        "editor.formatOnSave": true,
        /* for formatting, try these depending on what's installed
        */
        "editor.defaultFormatter": "esbenp.prettier-vscode", // prettier
        "editor.defaultFormatter": "vscode.html-language-features", // built-in
        "editor.defaultFormatter": "redhat.vscode-xml",
    },
    "[html]": {
        // "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.suggest.insertMode": "replace",
        "gitlens.codeLens.scopes": [
            "document"
        ],
        "editor.defaultFormatter": "vscode.html-language-features"
    },
    // "powershell.powerShellDefaultVersion": "",
    "[powershell]": {
        "editor.formatOnSave": true,
        // "editor.snippetSuggestions": "none",
        "files.encoding": "utf8bom",
        "editor.formatOnSaveMode": "file",
        "editor.formatOnPaste": true,
        // "editor.codeActionsOnSave": {"source.fixAll": true, "source.organizeImports": true},
        "editor.formatOnType": false, // currently it's NYI in the extension
        "files.autoGuessEncoding": false,
        "editor.detectIndentation": false, // required for tabsize
        "editor.tabSize": 4,
        // if autoIndent is set to 'full' it breaks indentation on 'move line up/down'
        "editor.autoIndent": "advanced",
        "editor.semanticHighlighting.enabled": true,
    },
    "[markdown]": {
        // "editor.defaultFormatter": "vscode.markdown-language-features",
        // "editor.defaultFormatter": "DavidAnson.vscode-markdownlint",
        // "editor.defaultFormatter": "shd101wyy.markdown-preview-enhanced",
        "editor.defaultFormatter": "yzhang.markdown-all-in-one",
        "editor.wordWrap": "on",
        "editor.quickSuggestions": false,
        "editor.formatOnSave": true,
        // "editor.formatOnType": true,
        /* hard line breaks in MD are declared using two trailing spaces */
        "files.trimTrailingWhitespace": false,
    },
    "[csv]": {
        "editor.wordWrap": "off",
        // "files.trimFinalNewlidnes": true,
        "files.insertFinalNewline": false,
    },
    "[powerquery]": {
        "editor.formatOnSave": false,
        "editor.semanticHighlighting.enabled": true,
        // "editor.semanticHighlighting.enabled": false,
        // todo: edit theme
    },
    "[log]": {
        "editor.wordWrap": "on",
        "editor.wrappingIndent": "deepIndent",
        "editor.wrappingStrategy": "simple",
    },
    "[javascript]": {
        "editor.defaultFormatter": "vscode.typescript-language-features",
        // "editor.formatOnType": true,
        "editor.formatOnSave": true,
        "editor.formatOnPaste": false,
    },
    "prettier.printWidth": 140,
    "prettier.tabWidth": 4,
    "git.showPushSuccessNotification": true,
    "terminal.integrated.drawBoldTextInBrightColors": true,
    // "editor.quickSuggestions": {
    //     "other": true,
    //     "comments": false,
    //     "strings": false
    // },
    /*

###### SubSect: Extension: ⇢ Markdown

    section: Markdown + related MD extensins

    */
    // Controls the font family used in the markdown preview.
    // "markdown.preview.fontFamily": "-apple-system, BlinkMacSystemFont, 'Sego