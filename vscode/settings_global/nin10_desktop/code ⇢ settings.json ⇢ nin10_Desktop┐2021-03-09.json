{
    // will this prevent prompt from synapse (venv) automatically changing your prompt
    "python.terminal.activateEnvInCurrentTerminal": false,
    "python.terminal.activateEnvironment": false,
    /*

    See also:
        <https://github.com/SeeminglyScience/dotfiles/blob/a7a9bcf3624efe5be4988922ba2e35e8ff2fcfd8/VSCode/settings.json>


    ## Testing new icons:
        icon docs:
            <https://github.com/vscode-icons/vscode-icons/wiki/ListOfFolders#test>
            <https://code.visualstudio.com/docs/getstarted/themes#_selecting-the-file-icon-theme>
            pwsh thread: <https://discord.com/channels/180528040881815552/447476910499299358/801102910192222208>

    justin's config:
                  "vsicons.associations.files": [
                    {
                        "extensions": [
                            "arm.json"
                        ],
                        "format": "svg",
                        "icon": "azure"
                    },
                    {
                        "extensions": [
                            "parameters.json"
                        ],
                        "format": "svg",
                        "icon": "config"
                    },
                    {
                        "extensions": [
                            "tests.ps1"
                        ],
                        "format": "svg",
                        "icon": "test"
                    },
                    {
                        "extensions": [
                            "clixml"
                        ],
                        "format": "svg",
                        "icon": "xml"
                    }
                ],
                "vsicons.associations.folders": [
                    {
                        "extends": "dist",
                        "extensions": [
                            "BuildOutput",
                            "Output"
                        ],
                        "format": "svg",
                        "icon": "dist"
                    },
                    {
                        "extends": "helper",
                        "extensions": [
                            "BuildHelpers"
                        ],
                        "format": "svg",
                        "icon": "helper"
                    }
                ],



!!!! section: new settings on a trial run !!!!


    */
    /*
    [v1.53]
        inline urls, extension API: <https://code.visualstudio.com/updates/v1_53#_external-uri-opener>


    "workbench.editor.wrapTabs"
        https://code.visualstudio.com/updates/v1_53#_wrap-tabs

        Controls whether tabs should be wrapped over multiple lines when exceeding available space or whether a scrollbar should appear instead. This value is ignored when `#workbench.editor.showTabs#` is disabled.


        */

        "workbench.editor.showTabs": false,
        "workbench.editor.showTabs": true, // default
        "workbench.editor.showIcons": false,
        "workbench.editor.showIcons": true, // default
        "workbench.editor.wrapTabs": false, // default
        // "workbench.editor.tabSizing": "shrink", // super important if you 'wrapTabs'
        // "workbench.editor.tabSizing": "fit", // super important if you 'wrapTabs'
        // "workbench.editor.wrapTabs": true,
        /*


        "workbench.editor.pinnedTabSizing":
        Controls the sizing of pinned editor tabs. Pinned tabs are sorted to the beginning of all opened tabs and typically do not close until unpinned. This value is ignored when #workbench.editor.showTabs# is disabled.
        "compact":      A pinned tab will show in a compact form with only icon or first letter of the editor name.
        "normal":       [default] A pinned tab inherits the look of non pinned tabs.
        "shrink":       A pinned tab shrinks to a compact fixed size showing parts of the editor name.
        */
        "workbench.editor.pinnedTabSizing": "normal", // default
        "workbench.editor.pinnedTabSizing": "shrink",
        // "workbench.editor.pinnedTabSizing": "compact",
        "workbench.editor.decorations.colors":true,
        "workbench.editor.decorations.badges": true,
        "workbench.editor.enablePreviewFromCodeNavigation":true,


        /*

    "search.mode":
            Default search mode

            The search.mode setting is now available to allow configuring what search UI commands like Search: Find in Files, and the explorer's Find in Folder... and Find in Workspace context menu entries use,

        "view"             Search in the search view, either in the panel or sidebar.
        "newEditor"        Search in a new search editor
        "reuseEditor"      Search in an existing search editor if present, otherwise in a new search editor

        */
        // "search.mode": "view",
        // "search.mode": "reuseEditor",
        "search.mode": "newEditor",



        /*
    "notebook.breadcrumbs.showCodeCells": and
    "notebook.outline.showCodeCells":
            https://code.visualstudio.com/updates/v1_53#_outline-and-breadcrumbs

        */
        "notebook.breadcrumbs.showCodeCells": true,
        "notebook.outline.showCodeCells": true,




    /*
    "git:*"
        https://code.visualstudio.com/updates/v1_53#_git-new-settings
        "git.autofetch"
        "git.ignoreRebaseWarning"
        "git.requireGitUserConfig"
    */

        // "git.autofetch": false,           // all | true | false
        "git.ignoreRebaseWarning":false,     // [default]false | true
        "git.requireGitUserConfig":true,    // [def]true | false

        "search.experimental.searchInOpenEditors": true,
    /*
    html.format.wrapAttributes
        "aligned-multiple"              // Wrap when line length is exceeded, align attributes vertically.
        "auto"                          // Wrap attributes only when line length is exceeded.
        "force"                         // Wrap each attribute except first
        "force-aligned"                 // Wrap each attribute except first and keep aligned.
        "force-expand-multiline         // Wrap each attribute
        "preserve",                     // Preserve wrapping of attributes
        "preserve-aligned",             // Preserve wrapping of attributes but align

        */
        "html.format.wrapAttributes": "auto",
        /*


!!!! section: Main start !!!!



    debugging:  log levels

    */
    /*
    this mode is a bit crazy, adds a dynamic pane
    showing your 'calculated defaults' relative the selected file on
    the right (user/workspace/folder)
    */
    "workbench.settings.useSplitJSON": true,
    "powershell.codeFormatting.whitespaceBetweenParameters": false,
    "editor.snippetSuggestions": "none",
    "workbench.settings.useSplitJSON": false,
    "workbench.settings.openDefaultSettings": false,
    "window.newWindowDimensions": "offset",
    "window.confirmBeforeClose": "keyboardOnly", // https://code.visualstudio.com/updates/v1_51#_prevent-accidental-close
    "window.restoreWindows": "all",

    "powershell.developer.editorServicesLogLevel": "Diagnostic",
    /* copy paste related config */
    // "editor.colorDecorators": true,
    "terminal.integrated.copyOnSelection": false, // this might be the cause of the copy paste issues
    // "editor.copyWithSyntaxHighlighting": true,
    "editor.emptySelectionClipboard": false,
    "editor.suggest.filterGraceful": true,
    "editor.suggest.localityBonus": true,
    // "editor.acceptSuggestionOnEnter": "smart",
    "editor.suggest.showFields": true,
    // "editor.suggest.snippetsPreventQuickSuggestions": false,
    "editor.links": true,
    // "editor.glyphMargin": true,
    // "editor.fontWeight": "normal",
    // "markdown.extension.orderedList.autoRenumber": true,
    // "python.analysis.logLevel": "Warning",
    // schema for Powershell
    "xml.fileAssociations": [
        {
            "systemId": "https://raw.githubusercontent.com/PowerShell/PowerShell/master/src/Schemas/Format.xsd",
            "pattern": "**/*.Format.ps1xml"
        },
        {
            "systemId": "https://raw.githubusercontent.com/PowerShell/PowerShell/master/src/Schemas/Types.xsd",
            "pattern": "**/*.Types.ps1xml"
        }
    ],
    // "search.useReplacePreview": true,
    // nice for log files
    // "explorer.sortOrder": "modified",
    /*
        custom colorizations

            docs: <https://code.visualstudio.com/api/references/theme-color>
    */
    "workbench.colorCustomizations": {
        // highlight 'active' window, without being too bold
        "window.activeBorder": "#a75715e3", // pretty bright
        "window.activeBorder": "#a857ff85", // pretty bright
        // "window.inactiveBorder": "#a7b67080",
        // "statusBar.border": "magenta",
        "window.inactiveBorder": "#a7b67000",
        // "tree.indentGuidesStroke": "#ff0000"
        // "debugView.valueChangedHighlight": "#ff0000"
        // "diffEditor.insertedTextBackground": "#ff0000",
        // "diffEditor.insertedTextBorder": "#ff0000",
        // "diffEditor.removedTextBackground": "#ff0000",
        // "diffEditor.border": "#ff0000",
        // "window.inactiveBorder": "#ff000069",
        // "editorCursor.foreground": "#ff0000"
        // "editorCursor.background": "#ff0000"
        /*
            editor find
        */
        /*
        "editor.findMatchBackground": "#ff0000",
        "editor.findMatchBorder": "#ff0000",
        "editor.findMatchHighlightBackground": "#ff0000",
        "editor.findRangeHighlightBackground": "#ff0000",
        "editor.findMatchHighlightBorder": "#ff0000",
        "editor.findRangeHighlightBorder": "#ff0000",
        "editorOverviewRuler.findMatchForeground": "#ff0000",
        "searchEditor.findMatchBackground": "#ff0000",
        "searchEditor.findMatchBorder": "#ff0000",
        "editor.snippetFinalTabstopHighlightBorder": "#ff0000",
        "editor.snippetFinalTabstopHighlightBackground": "#ff0000",
        "editorOverviewRuler.modifiedForeground": "#ff0000",
        */
    },
    /*

        font-sizes:
    */
    // for zoom = 0
    "debug.console.fontSize": 14,
    // "editor.fontSize": 14, // for zoom -0
    "editor.fontSize": 17, //18 16, // for zoom -1
    "editor.fontSize": 15, // for zoom -0
    "editor.suggestFontSize": 16, //14, // for zoom -1
    // "editor.suggestFontSize": 12, // for zoom 0
    // "terminal.integrated.fontSize": 15, // for zoom -1
    "terminal.integrated.fontSize": 14, //12, // for zoom 0
    // ....
    /*

    [section]: grepping config
        "openLocationToSide", "goToLocation"
    */
    "search.searchEditor.doubleClickBehaviour": "goToLocation",
    "search.searchEditor.defaultNumberOfContextLines": 1, // grep -C <n>
    // "search.searchEditor.reusePriorSearchConfiguration": true,
    /*
    [section]: CSharp / Dotnet
    */
    "csharpextensions.privateMemberPrefix": "_",
    "csharpextensions.useThisForCtorAssignments": false,
    /*
    [section]: Python
    */
    // "python.linting.enabled": true,
    // "code-runner.saveFileBeforeRun": true,
    "[python]": {
        // "editor.formatOnType": true,
        // "editor.formatOnPaste": true,
        // "editor.formatOnSave": true,
        // "editor.semanticHighlighting.enabled": true
    },
    "terminal.integrated.commandsToSkipShell": [
        "workbench.action.files.newUntitledFile",
        "workbench.action.toggleSidebarVisibility",
        "workbench.action.showAllSymbols",
    ],
    // "editor.semanticHighlighting.enabled": false,
    // "editor.semanticTokenColorCustomizations": {
    "enabled": true,
    //     // "rules": {"xmlDocCommentAttributeQuotes": "#ff0000"},
    //     // "[PowerShell ISE]": {"rules": {}}
    // },
    // "terminal.explorerKind": "external",
    /*

    section: <window title templates>

    titlebar examples are using this example project:

        Workspace:
            C:\Users\<user>\Documents\2020\powershell\MyModules_Github\Ninmonkey.Console\Ninmonkey.Console.code-workspace

        Selected Tab Filepath :
            ${workspaceRoot}\public\native_wrapper\Invoke-IPython.ps1

        "window.titleSeparator" = " ⁞ "
    old ones

\
    */
    // output: NinMonkey.Console ⁞ c:\foo\bar ⁞ settings.json
    // "window.title": "${dirty}${rootName}${separator}${activeFolderMedium}${separator}${activeEditorShort}",
    // output: NinMonkey.Console ⁞ settings.json ⁞ c:\foo\bar
    "window.title": "${dirty}${rootName}${separator}${activeEditorShort}|${separator}${activeFolderMedium}",
    // output: NinMonkey.Console ⁞ settings.json ⁞ bar
    "window.title": "${dirty}${rootName}${separator}${activeEditorShort}${separator}${activeFolderShort}",
    // output: settings.json <- bar
    "window.title": "${activeEditorShort}$ <- ${activeFolderShort}",
    // output: settings.json [bar] ⁞ NinMonkey.Console
    // output: settings.json [bar] ⁞ NinMonkey.Console
    // output: Format-FileSize.ps1 [public] NinMonkey.Console (Workspace)
    // output: Format-FileSize.ps1 ⇽ [public]
    "window.title": "${activeEditorShort}$ ⇽ ${activeFolderShort}",
    // output: Format-FileSize.ps1 [public] NinMonkey.Console (Workspace)
    // output: Invoke-IPython.ps1 [native_wrapper] ⁞ NinMonkey.Console (Workspace)
    "window.title": "${dirty}${activeEditorShort}$ [${activeFolderShort}]${separator}${rootName}",
    // output: Invoke-IPython.ps1 [public\native_wrapper] ⁞ NinMonkey.Console (Workspace)
    // "window.title": "${dirty}${activeEditorShort}$ [${activeFolderLong}]${separator}${rootName}",
    // "window.title": "${dirty}${activeEditorShort}$ [${activeFolderMedium}]${separator}${rootName}",
    /*

    new ones:
    */
    // output: NinMonkey.Console (Workspace) ⁞ Invoke-IPython.ps1 ⁞ public\native_wrapper
    "window.title": "${dirty}${rootName}${separator}${activeEditorShort}${separator}${activeFolderMedium}",
    // "window.title": "${dirty}${activeEditorShort}${separator}${rootName}${separator}${activeFolderMedium}",
    // output: NinMonkey.Console (Workspace) ⁞ Invoke-IPython.ps1 ⁞ native_wrapper
    // "window.title": "${dirty}${rootName}${separator}${activeEditorShort}${separator}${activeFolderShort}",
    // output: NinMonkey.Console (Workspace) ┐ Invoke-IPython.ps1 ⇽ native_wrapper
    // "window.title": "${dirty}${rootName} ┐ ${activeEditorShort}$ ⇽ ${activeFolderShort}",
    // "window.title": "${dirty}${rootName} ┐ ${activeEditorShort}$ ⇽ ${folderName}",
    "window.titleSeparator": " ⁞ ", // or: ┐ ⇽
    /*

    wip final

    */
    // output: NinMonkey.Console ⁞ c:\foo\bar ⁞ settings.json
    // "window.title": "${dirty}${rootName}${separator}${activeFolderMedium}${separator}${activeEditorShort}",
    // output: NinMonkey.Console ⁞ settings.json ⁞ bar
    // output: settings.json <- bar
    // output: NinMonkey.Console (Workspace) ┐ Format-FileSize.ps1 ⇽ [public]
    /*
    section: </window title templates>
    */
    // "editor.trimAutoWhitespace": true,
    // "diffEditor.ignoreTrimWhitespace": true,
    // "editor.suggest.maxVisibleSuggestions": 15, : this is obsolete as of 2020-11
    // "html.autoClosingTags": true,
    // "powershell.enableProfileLoading": true,

    "workbench.settings.editor": "json",
    // "workbench.settings.enableNaturalLanguageSearch": false,
    // "workbench.settings.settingsSearchTocBehavior": "filter",
    // "workbench.editor.labelFormat": "long",
    // "editor.cursorWidth": 60,
    "editor.cursorBlinking": "smooth", // "smooth",
    // "editor.cursorStyle": "block-outline",
    "editor.cursorStyle": " underline",
    /* cursor config for screenshots */
    "editor.cursorBlinking": "solid", // "smooth",
    "editor.cursorStyle": "block-outline",
    // "editor.cursorSurrounding"underline"s": 50,
    // "terminal.integrated.cursorWidth": 1,
    // "terminal.integrated.cursorWidth": 1,
    // "editor.hideCursorInOverviewRuler": false,
    "docsView.documentationView.updateMode": "live",
    // "debug.console.historySuggestions": true,
    /*
    todo:

    iterate them:
    "workbench*"
    "cursor*"
    "temrinal.*"
    */
    // makes left click instant
    "editor.cursorSmoothCaretAnimation": false,
    // "powershell.developer.waitForSessionFileTimeoutSeconds": 240,
    // "powershell.developer.bundledModulesPath": "",
    "powershell.integratedConsole.suppressStartupBanner": false,
    "powershell.codeFormatting.useCorrectCasing": true,
    "powershell.codeFormatting.autoCorrectAliases": true,
    //
    "powershell.codeFormatting.whitespaceAroundPipe": true,
    // "powershell.buttons.showPanelMovementButtons": true,
    // "powershell.buttons.showRunButtons": true,
    // "powershell.codeFolding.showLastLine": true,
    "powershell.codeFormatting.addWhitespaceAroundPipe": true,
    // "powershell.codeFormatting.ignoreOneLineBlock": true,
    // "powershell.codeFolding.enable": true,
    // "powershell.scriptAnalysis.settingsPath": "PSScriptAnalyzerSettings.psd1",
    // "powershell.scriptAnalysis.settingsPath": "PSScriptAnalyzerSettings.psd1", # relative workspace, else global:
    "powershell.scriptAnalysis.settingsPath": "C:\\Users\\cppmo_000\\Documents\\2020\\dotfiles_git\\vs code profiles\\user\\PSScriptAnalyzerSettings.psd1",
    "powershell.scriptAnalysis.enable": true,
    "[toml]": {
        // "editor.snippetSuggestions": "inline",
        // "editor.suggest.snippetsPreventQuickSuggestions": true,
        // "editor.suggest.showSnippets": true,

    },
    "[powershell]": {
        "editor.snippetSuggestions": "none",
        "files.encoding": "utf8bom",
        "editor.semanticHighlighting.enabled": false, // some themes break this
        // "editor.semanticHighlighting.enabled": true, // some themes break this
        "editor.formatOnSaveMode": "file",
        "editor.formatOnSave": true,
        // "editor.formatOnPaste": false, // sometimes an issue in PS1
        "editor.formatOnPaste": true,
        "editor.formatOnType": false, // currently it's NYI
        "files.autoGuessEncoding": false,
        "editor.detectIndentation": false, // required for tabsize
        "editor.tabSize": 4,
        // if autoIndent is set to 'full' it breaks indentation on 'move line up/down'
        "editor.autoIndent": "advanced",
        /*

        test: temp disable formatting to see if it's crashing the PSIT
        */
        // "editor.formatOnPaste": false,
        // "editor.formatOnType": false, // currently it's NYI
        // "editor.formatOnSave": false, // currently it's NYI
    },
    // "powershell.powerShellDefaultVersion": "",
    // "editor.autoClosingBrackets": "beforeWhitespace",
    "workbench.list.automaticKeyboardNavigation": true,
    // "python.autoComplete.addBrackets": false,
    // "terminal.integrated.automationShell.linux": null,
    /*
    /*

    test: mypy:
        config: https://mypy.readthedocs.io/en/latest/config_file.html

    */
    // "mypy.configFile": "",
    "mypy.executable": "",
    "mypy.targets": [
        "."
    ],
    /*

    test: python

    */
    "python.linting.mypyArgs": [
        "--ignore-missing-imports",
        "--follow-imports=silent",
        "--show-column-numbers"
    ],
    "pythonlinting.mypyCategorySeverity.error": "Warning",
    // "python.linting.mypyPath": "mypy",
    "python.linting.mypyPath": "mypy",
    "python.linting.mypyCategorySeverity.note": "Warning",
    "python.analysis.memory.keepLibraryAst": false,
    // "python.analysis.errors": false,
    // "python.analysis.errors": [],\
    "breadcrumbs.enabled": true, // extra row on toolbar on tabs
    // "breadcrumbs.showArrays": true,
    "files.exclude": {
        "**/*.exe": true,
        "**/*.lnk": true,
        "**/*.pbix": true,
        "**/*.zip": true,

        // venv, cache, or compiled
        "**/*.py[co]": true,
        "**/__pycache__": true,
        "**/node_modules": true,
        "**/.mypy_cache": true,
        "**/venv": true
    },
    "search.exclude": {
        // "**/*.mez": true,
        "**/*.lnk": true,
        "**/*.log": true,
    },
    // "files.trimFinalNewlines": true,
    "files.insertFinalNewline": false,
    // use 'find in selection' only if lines are selected
    "editor.find.autoFindInSelection": "multiline",
    // "editor.find.seedSearchStringFromSelection": true,
    // "debug.focusWindowOnBreak": true,
    "debug.allowBreakpointsEverywhere": true,
    "debug.console.closeOnEnd": false,
    /*

    section: fonts

    */
    "debug.console.fontFamily": "'cascadia code', cascadia mono, Fira Code Retina, Consolas, Fira Code Bold",
    // "editor.fontFamily": "'consolas', 'verdana', 'fira code', consolas,  'cascadia code', 'cascadia mono', verdana, 'consolas', arial, cascadia mono, Fira Code Retina, Fira Code, FIra Code Bold, Fira Code L1ht, Fira Code Retina, Consolas, 'Courier New', monospace",
    /*
        run command: 'Switch Font'
    */
    // "font-switcher.enableLivePreview": true,
    // "font-switcher.fontFamily": "Arial, Cascadia Code, Cascadia Code PL, Cascadia Mono, Cascadia Mono PL, Consolas, Courier New, Fira Code, Fira Code Bold, Fira Code Retina, Fira Code Retina, Fira Code, Monospace, Verdana",
    "font-switcher.fontFamily": "'Arial', 'Cascadia Code', 'Cascadia Code PL', 'Cascadia Mono', 'Cascadia Mono PL', 'Consolas', 'Courier New', 'Fira Code', 'Fira Code Bold', 'Fira Code Retina', 'Fira Code Retina', 'Fira Code', 'Monospace', 'Verdana'",
    // "font-switcher.fontFamily": "Fira Code Retina, Consolas, DejaVu Sans Mono, monospace",
    "terminal.integrated.cwd": "",
    "terminal.integrated.detectLocale": "auto",
    "terminal.integrated.env.windows": {},
    "terminal.integrated.unicodeVersion": "11",
    "editor.renderWhitespace": "selection",
    // "editor.autoIndent": false,
    "python.formatting.provider": "black",
    "editor.suggestSelection": "first",
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    // "editor.renderControlCharacters": true,
    // "editor.fontLigatures": true,
    "workbench.editor.labelFormat": "medium",
    "vscode-json-editor.theme": "dark",
    "python.pythonPath": "c:\\Users\\cppmo_000\\Documents\\2020\\python\\one_offs\\Heroes of the Storm stats\\venv\\Scripts\\python.exe",
    "python.jediEnabled": false,
    "python.languageServer": "Pylance",
    /* debug and verbose logging settings */
    // "powershell editor services.trace.server": "verbose",
    // "powershell editor services.trace.server": "diagnostic",
    "powerquery.trace.server": "verbose",
    /* ... */
    "editor.wordWrap": "on",
    // "terminal.integrated.automationShell.windows": "",

    // "terminal.integrated.fontWeight": ,
    /*

    semantic

    */
    // "editor.semanticHighlighting.enabled": true,
    // "csharp.semanticHighlighting.enabled": true,
    "editor.semanticTokenColorCustomizations": {

        /*
        semantic -> global
        */
        // "enabled": true,
        "rules": {
            // "*.abstract": "#ff0000"
            // "*.deprecated": "#ff0000",
            // "*.documentation": "#ff0000",
            /*
            semantic: xml
            */
            // "xmlDocCommentComment": "#ff0000"
            // "*.global": "#ff0000",
            // "*.readonly": "#ff0000"
        },
        /*
        semantic -> [theme] specific
        */
        "[Nord]": {
            // "enabled": true,
            "rules": {}
        },
    },
    /* other */
    // "python.linting.mypyEnabled": true,
    // "debug.inlineValues": true,
    "[csv]": {
        "editor.wordWrap": "off",
        // "files.trimFinalNewlidnes": true,
        "files.insertFinalNewline": false,
    },
    "[powerquery]": {
        "editor.formatOnSave": false,
    },
    "[log]": {
        "editor.wordWrap": "on",
        "editor.wrappingIndent": "deepIndent",
        "editor.wrappingStrategy": "simple",
    },
    "debug.openDebug": "openOnDebugBreak",
    "editor.wordWrapColumn": 140,
    "terminal.integrated.fontFamily": "cascadia code, fira code retina, cascadia code, consolas",
    "gitlens.mode.active": "zen",
    "files.encoding": "utf8",
    "files.autoGuessEncoding": false,
    "files.associations": {
        // "**/Irregular/**/*.regex.txt": "powershell",
        "*.json": "jsonc",
        // powershell
        "*.ps1xml": "xml",
        // microsoft / vs studio
        "*.wixproj": "xml",
        "*.mproj": "xml",
        "*.odc": "html",
        // ripgrep, bat
        ".batrc": "shellscript",
        ".ripgreprc": "shellscript",
        "nuget.config": "xml",
    },
    "workbench.editorAssociations": [],
    "files.defaultLanguage": "${activeEditorLanguage}",
    "files.trimTrailingWhitespace": true,
    "editor.renderLineHighlight": "all",
    // "editor.renderLineHighlightOnlyWhenFocus": true,
    // "workbench.commandPalette.preserveInput": true,
    // "[powerquery]": {}
    // "terminal.integrated.shell.windows": "C:\\Program Files\\Git\\bin\\bash.exe",
    // "terminal.integrated.shell.windows": "C:\\Program Files\\Git\\git-bash.exe",
    // "terminal.integrated.shell.linux": "C:\\Windows\\System32\\cmd.exe",
    // // "terminal.integrated.shell.windows": "C:\\Windows\\System32\\cmd.exe",
    // "terminal.integrated.shell.windows": "C:\\Program Files\\Git\\bin\\bash.exe",
    // "terminal.external.windowsExec": "powershell",
    /*

    external term
        was using: // "terminal.external.windowsExec": "C:\\Program Files\\PowerShell\\7\\pwsh.exe",

    */
    "terminal.external.windowsExec": "wt",
    // "terminal.explorerKind": "external",
    // "terminal.integrated.shell.windows": "C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe",
    "terminal.integrated.shell.windows": "C:/Program Files/PowerShell/7/pwsh.exe",
    "terminal.integrated.shellArgs.windows": [
        "-NoLogo"
    ],
    /*

    docs: <https://code.visualstudio.com/docs/editor/integrated-terminal#_windows>
            examples:
                // CMD, Win PS, GitBash, and WSL
                "terminal.integrated.shell.windows": "C:\\Windows\\System32\\cmd.exe"
                // PowerShell
                "terminal.integrated.shell.windows": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"
                // Git Bash
                "terminal.integrated.shell.windows": "C:\\Program Files\\Git\\git-cmd.exe",
                "terminal.integrated.shellArgs.windows": [ "--command=usr/bin/bash.exe", "-l", "-i" ]
                // Bash on Ubuntu (on Windows)
                "terminal.integrated.shell.windows": "C:\\Windows\\System32\\bash.exe"
    */
    /*


    \


        if pwsh.exe
            this did not fix piping to code using 'code - '
    */
    // "terminal.integrated.shellArgs.windows": [
    //     "-C",
    //     "'chcp 65001'"
    // ],
    /*
        if cmd.exe, then this this might fix piping to code using 'code - '
    "terminal.integrated.shellArgs.windows": [
        "-NoExit",
        "/c",
        "chcp.com 65001"
    ],
    */
    // "terminal.integrated.shellArgs.windows": [
    // "-nop"
    // "terminal.integrated.shell.windows": "C:\\Program Files\\Git\\bin\\bash.exe",
    // ],
    "terminal.integrated.rendererType": "canvas",
    // "terminal.integrated.fontSize": 12,
    // "terminal.integrated.inheritEnv": false
    // "terminal.integrated.shell.windows": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"
    // "terminal.integrated.shell.windows": "C:\\Windows\\System32\\bash.exe"
    /* [1]  ##### extensions  ### */
    "codepoint.statusbar": "description",
    // "workbench.editor.focusRecentEditorAfterClose": true,
    "workbench.quickOpen.closeOnFocusLost": false,
    "gitlens.views.repositories.files.layout": "list",
    // "editor.suggest.statusBar.visible": true,
    // "editor.suggest.showStatusBar": true, // https://code.visualstudio.com/updates/v1_51#_status-bar-for-suggestions
    // "editor.suggest.insertMode":"insert", // https://code.visualstudio.com/updates/v1_51#_move-cursor-to-select-suggestions
    // "editor.formatOnSave": true,
    // "editor.formatOnPaste": true,
    // "editor.formatOnType": true,
    "editor.largeFileOptimizations": false,
    "[json]": {
        // "editor.defaultFormatter": "vscode.json-language-features",
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        // "editor.formatOnType": true,
        // "editor.formatOnSave": true,
        "editor.formatOnPaste": false,
        // "editor.semanticHighlighting.enabled": true,
        // "editor.maxTokenizationLineLength": 20000
        "editor.detectIndentation": false,
        "editor.tabSize": 4,
    },
    // "editor.definitionLinkOpensInPeek": false,
    "[jsonc]": {
        // "editor.defaultFormatter": "esbenp.prettier-vscode", // removes trainling by default
        // default to allow jsonc syntax
        "editor.defaultFormatter": "vscode.json-language-features",
        // "editor.formatOnSave": true,
        "editor.formatOnPaste": false,
        // "editor.formatOnType": true,
        "editor.formatOnSaveMode": "file",
        "editor.detectIndentation": false,
        "editor.tabSize": 4,
    },

    /* other*/
    // "powershell.codeFormatting.whitespaceAroundOperator": true,
    "workbench.tree.indent": 14, //  # might be good for XML / JSON that's nested
    "[html]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "workbench.tree.indent": 14, //  # might be good for XML / JSON that's nested
    },
    /*

    section: Markdown + related MD extensins

    */
    // Controls the font family used in the markdown preview.
    // "markdown.preview.fontFamily": "-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif",
    // // Controls the font size in pixels used in the markdown preview.
    // "markdown.preview.fontSize": 14,
    // // Controls the line height used in the markdown preview. This number is relative to the font size.
    // "markdown.preview.lineHeight": 1.6,
    "markdown-preview-enhanced.codeBlockTheme": "auto.css",
    // "markdown-preview-enhanced.configPath": "a",
    "markdown-preview-enhanced.automaticallyShowPreviewOfMarkdownBeingEdited": false,
    "markdown-preview-enhanced.enableEmojiSyntax": true,
    // "markdown-preview-enhanced.enableExtendedTableSyntax": false,
    // "markdown-preview-enhanced.frontMatterRenderingOption": "table",
    "markdownlint.run": "onType",
    "markdownlint.config": {
        // "$schema": "https://raw.githubusercontent.com/DavidAnson/markdownlint/master/schema/markdownlint-config-schema.json",
        "ul-indent": true,
        "ul-style": true,
        // "blank_lines":
        // "no-bare-urls": true
    },
    // https: //github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens
    // "gitlens.hovers.detailsMarkdownFormat": "${avatar} &nbsp;__${author}__, ${ago} &nbsp; _(${date})_ \n\n${message}\n\n${commands}",
    "markdownlint.ignore": [
        // "a"
    ],
    "markdownlint.customRulesAlwaysAllow": [],
    // "markdown"
    "markdownlint.customRules": [
        // "f"
    ],
    "[markdown]": {
        // "editor.formatOnSave": true,
        // "editor.formatOnType": true,
        /* hard line breaks in MD are declared using two trailing spaces */
        "files.trimTrailingWhitespace": false,
        "editor.wordWrap": "on",
        // "editor.defaultFormatter": "vscode.markdown-language-features",
        // "editor.defaultFormatter": "DavidAnson.vscode-markdownlint",
        // "editor.defaultFormatter": "shd101wyy.markdown-preview-enhanced",
        "editor.quickSuggestions": false,
        "editor.defaultFormatter": "yzhang.markdown-all-in-one",
    },
    "prettier.printWidth": 140,
    "prettier.tabWidth": 4,
    // "git.showPushSuccessNotification": true,
    "powershell.codeFormatting.addWhitespaceAroundPipe": false,
    "powershell.codeFormatting.preset": "OTBS",
    "[javascript]": {
        "editor.defaultFormatter": "vscode.typescript-language-features",
        // "editor.formatOnType": true,
        // "editor.formatOnSave": true,
        "editor.formatOnPaste": false,
    },
    "editor.accessibilitySupport": "off",
    // "json.schemas": [
    // ]
    "terminal.integrated.drawBoldTextInBrightColors": true,
    // "editor.suggestLineHeight": 12,
    // "editor.quickSuggestions": {
    "other": true,
    //     "comments": false,
    //     "strings": false
    // },
    "[swift]": {
        "editor.formatOnPaste": false,
        "editor.formatOnSave": false,
        "editor.formatOnType": false,
        "editor.defaultFormatter": null,
    },
    "gitlens.views.compare.files.layout": "tree",
    "[xml]": {
        "editor.defaultFormatter": "redhat.vscode-xml",
    },
    "jupyter.interactiveWindowMode": "perFile",
    // "omnisharp.enableDecompilationSupport": true,
    "workbench.iconTheme": "vs-seti",
    "files.autoSave": "afterDelay",
    "diffEditor.ignoreTrimWhitespace": false,
    "powershell.notebooks.showToggleButton": true,
    "pesterExplorer.autoDiscoverOnOpen": true,
}