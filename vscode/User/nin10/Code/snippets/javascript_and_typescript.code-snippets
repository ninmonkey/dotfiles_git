{
    // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    // 	"scope": "javascript,typescript",
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    "DOM.common.queryById | Unique Element": {
        "scope": "javascript,typescript",
        "description": "document.QueryById | $(\"#element_id\")",
        "prefix": "getElementById",
        "body": [
            /*
            pattern:
                - name and selector have the same value
                - tab again to optionally customize the second
                    - this fully selects the new text, so one backspace cleanly removes it

            output:
                for typing: 'name'

                const $name = document.getElementById("#name");
            */
            "const $${1:name} = document.getElementById('#${2:${1:selector}}');",
        ]
    },
    // "DOM.common.queryById | Unique Element2": {
    //     "scope": "javascript,typescript",
    //     "description": "document.QueryById | $(\"#element_id\")",
    //     "prefix": "alt getElementById",
    //     "body": [
    //         /*
    //             pattern:
    //             - name and selector have the same value
    //             - tab again to optionally customize the second
    //             - this fully selects the new text, so one backspace cleanly removes it
    //             output:
    //             for typing: 'name'
    //             const $name = document.getElementById("#name");
    //             */
    //         // "const $el = $bob $el",
    //         "const $elem = document.getElementById('#$elem');", // $note
    //     ]
    // }
}