// Place your key bindings in this file to override the defaults
[
    /*
      See also:

      ## Docs:
          https://code.visualstudio.com/api/references/commands
          https://code.visualstudio.com/api/references/when-clause-contexts


      ## Examples:
          - <https://github.com/SeeminglyScience/dotfiles/blob/a7a9bcf3624efe5be4988922ba2e35e8ff2fcfd8/VSCode/keybindings.json>

      ## New Commands
          - [October 2020 | version 1.51](https://code.visualstudio.com/updates/v1_51#_new-commands)
          - <https://code.visualstudio.com/updates/v1_57#_removed-cmdw-ctrlw-keybinding-to-close-window-when-no-editor-is-opened>


      */
    /* editor defaults */

    //   {
    //     "key": "ctrl+w",
    //     "command": "workbench.action.terminal.killEditor",
    //     "when": "terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
    //   },
    //   { "key": "ctrl+w", "command": "workbench.action.closeActiveEditor" },
    //   { "key": "ctrl+w",                "command": "workbench.action.closeGroup",
    //                                      "when": "activeEditorGroupEmpty && multipleEditorGroups" }

    // new: command: <https://code.visualstudio.com/updates/v1_59#_create-terminal-in-editor-area-to-the-side>

  //   {
  //     // opens a new term in the editor area, but in a side
  //     "key": "ctrl+numpad5",
  //     "command": "workbench.view.extensions",
  //     "when": "editorTextFocus"
  //     // "args": "",
  //   },
  //   {
  //     "key": "ctrl+numpad6",
  //     "command": "workbench.action.toggleMaximizedPanel",
  //     "when": ""
  //   },
  //   {
  //     // opens a new term in the editor area, but in a side
  //     "key": "ctrl+numpad4",
  //     "command": "workbench.action.createTerminalEditor",
  //     "when": "editorTextFocus"
  //   },
    /*
          experiment: prevent ctrl+w when editor is a terminal tab

              !editorIsOpen

          line2.2k
          involoved commands:
              { "key": "ctrl+w", "command": "workbench.action.closeActiveEditor" },
              { "key": "ctrl+w",  "command": "workbench.action.terminal.killEditor",
                  "when": "terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'" },
      */
    // {
    //     "key": "ctrl+w",
    //     "command": "workbench.action.closeActiveEditor",
    //     "when": "resourceScheme == 'vscode-terminal'"
    //     // "when": "activeEditor ==  'terminalEditor'"
    // },
    // "when": "!editorIsOpen && !multipleEditorGroups"
    // {
    //     // Temp override: disable it
    //     "key": "ctrl+w",
    //     "command": "-workbench.action.closeWindow",
    //     // "when": "!editorIsOpen && !multipleEditorGroups"
    // },
    {
      // from: https://code.visualstudio.com/updates/v1_57#_removed-cmdw-ctrlw-keybinding-to-close-window-when-no-editor-is-opened
      "key": "ctrl+w",
      "command": "workbench.action.closeWindow",
      "when": "!editorIsOpen && !multipleEditorGroups"
    },
    {
      "key": "ctrl+shift+c",
      "command": "PowerShell.ShowAdditionalCommands",
      // "when": "editorLangId == 'powershell'"
      "when": "editorTextFocus && editorLangId == 'powershell'"
    },
    {
      "key": "ctrl+.",
      "command": "PowerShell.InvokeRegisteredEditorCommand",
      "args": {
        "commandName": "Invoke-DocumentRefactor"
      },
      "when": "editorLangId == 'powershell'"
    },
    // {
    //     "key": "ctrl+w",
    //     "command": "-workbench.action.closeActiveEditor",
    //     "when": "resourceScheme == 'vscode-terminal'"
    // },

    /*


      ### Sect: Better Align

             tags: addon

          docs:
              https://marketplace.visualstudio.com/items?itemName=wwm.better-align
              alignment.surroundSpace : {
    "colon"      : [0, 1], // The first number specify how much space to add to the left, can be negative.
                           // The second number is how much space to the right, can be negative.
    "assignment" : [1, 1], // The same as above.
    "arrow"      : [1, 1], // The same as above.
    "comment"    : 2       // Special how much space to add between the trailing comment and the code.
                           // If this value is negative, it means don't align the trailing comment.
  }
      */
    {
      // "key": "ctrl+cmd+=",
      "key": "ctrl+numpad1",
      "command": "wwm.aligncode",
      "when": "editorTextFocus && !editorReadonly"
      // "args": ""
    },
    /*

      [section]: Debugging

      */
      {
        "key": "ctrl+w",
        "command": "-workbench.action.terminal.killEditor",
        "when": "terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
      },
      {
        "key": "ctrl+shift+k ctrl+shift+b",
        "command": "editor.action.selectToBracket"
      },



    /*
      examples

      [ex] Quick fix uses a regex
      {
          "key": "shift+alt+.",
          "command": "editor.action.autoFix",
          "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
      },

      [ex] conditional replacement
          (?<pattern>:<insertion>)

      [ex] conditional replacement
          (?<pattern>:<insertion>:<otherwise>)


          (?«n»:«insertion»:«otherwise») to have «otherwise» inserted when capture «n» was not matched.
      */

    {
      "key": "ctrl+shift+c",
      "command": "-workbench.action.terminal.openNativeConsole",
      "when": "!terminalFocus"
    },
    {
      "key": "ctrl+w",
      "command": "-workbench.action.terminal.killEditor",
      "when": "terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
    },
    {
      "key": "ctrl+shift+k ctrl+shift+b",
      "command": "editor.action.selectToBracket"
    },
    /*
      See also:
          - <https://github.com/SeeminglyScience/dotfiles/blob/a7a9bcf3624efe5be4988922ba2e35e8ff2fcfd8/VSCode/keybindings.json>
      New Commands
          - [October 2020 | version 1.51](https://code.visualstudio.com/updates/v1_51#_new-commands)
      */
    {
      // from: https://code.visualstudio.com/updates/v1_57#_removed-cmdw-ctrlw-keybinding-to-close-window-when-no-editor-is-opened
      "key": "ctrl+w",
      "command": "workbench.action.closeWindow",
      "when": "!editorIsOpen && !multipleEditorGroups"
    },
    {
      "key": "ctrl+shift+c",
      "command": "PowerShell.ShowAdditionalCommands",
      // "when": "editorLangId == 'powershell'"
      "when": "editorTextFocus && editorLangId == 'powershell'"
    },
    {
      "key": "ctrl+.",
      "command": "PowerShell.InvokeRegisteredEditorCommand",
      "args": {
        "commandName": "Invoke-DocumentRefactor"
      },
      "when": "editorLangId == 'powershell'"
    },
    {
        "key": "ctrl+v", // fixes a lot of paste problems for pwsh at least
        "command": "-workbench.action.terminal.paste",
        "when": "terminalFocus"
    },
    {
      "key": "ctrl+v", // fixes a lot of paste problems for pwsh at least
      "command": "-workbench.action.terminal.paste",
      "when": "terminalFocus && terminalProcessSupported"
    },
    /* one of these fixes it */
    // {
    //     "key": "ctrl+v",
    //     "command": "-editor.action.clipboardPasteAction"
    // },
    // {
    //     "key": "ctrl+shift+v",
    //     "command": "-workbench.action.terminal.paste",
    //     "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    // },
    /* this bind/hotkey is what breaks multiline pasting */
    {
        "key": "ctrl+v",
        "command": "-workbench.action.terminal.paste",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },

  ]
