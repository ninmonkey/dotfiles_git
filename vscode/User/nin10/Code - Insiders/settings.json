{
    "json.schemas": [
        // {
        //     "fileMatch": [
        //         "/myfile"
        //     ],
        //     "url": "schemaURL"
        // }
    ],
    /*

# h1: Real Config Starts Here

    */
    /*

# h1: Experimenting

    */
    "terminal.integrated.sendKeybindingsToShell": true,
    "powerquery.trace.server": "verbose",
    "editor.suggest.preview": true,
    "terminal.integrated.automationShell.windows": null, // what does it do?
    "powershell.integratedConsole.showOnStartup": true,
    // "powershell.developer.waitForSessionFileTimeoutSeconds": 240,
    "powershell.pester.debugOutputVerbosity": "Diagnostic",
    "powershell.pester.outputVerbosity": "FromPreference",
    "terminal.integrated.allowWorkspaceConfiguration": false,
    "terminal.integrated.sendKeybindingsToShell": true,
    "editor.mouseWheelScrollSensitivity": 2,
    "terminal.integrated.mouseWheelScrollSensitivity": 2,
    // "terminal.integrated.cwd": "",
    "terminal.integrated.environmentChangesRelaunch": true,
    "terminal.integrated.experimentalLinkProvider": true,
    "terminal.integrated.letterSpacing": 0,
    "terminal.integrated.lineHeight": 0,
    "powershell.enableProfileLoading": true, // applies to [intellisense and term] but *not* [debug]
    "terminal.integrated.rightClickBehavior": "copyPaste",
    "terminal.integrated.scrollback": 4000,
    "terminal.integrated.showExitAlert": false,
    "terminal.integrated.tabs.enabled": true,
    "terminal.integrated.tabs.focusMode": "doubleClick",
    "terminal.integrated.tabs.hideCondition": "singleTerminal",
    "terminal.integrated.tabs.location": "right", // values are the inverse of the side you want tabs
    "terminal.integrated.tabs.showActiveTerminal": "singleTerminalOrNarrow",
    "search.collapseResults": "auto", //"alwaysCollapse", alwaysExpand, auto
    "search.actionsPosition": "right",
    "search.mode": "view", //"reuseEditor",//"newEditor",
    "search.quickOpen.history.filterSortOrder": "default", //"recency",
    "search.searchEditor.defaultNumberOfContextLines": 1,
    "search.searchOnType": true,
    "search.seedOnFocus": true, // [ctrl+f] will use the current selection as the base
    "search.searchEditor.reusePriorSearchConfiguration": false,
    "search.smartCase": false,
    "search.sortOrder": "modified", //"type",//"modified",//"fileNames",//"default",//"countDescending",//"countAscending",//"type",
    "search.useIgnoreFiles": true,
    "search.useReplacePreview": true,
    "search.searchEditor.doubleClickBehaviour": "openLocationToSide", //"selectWord",//"openLocationToSide",//"goToLocation",
    // "terminal.integrated.commandsToSkipShell": [],
    "terminal.integrated.enableBell": false,
    "terminal.integrated.defaultProfile.windows": "PowerShell",
    "terminal.external.windowsExec": "wt.exe",
    "python.terminal.launchArgs": [],
    "terminal.integrated.environmentChangesIndicator": "warnonly", // "off", "on", "warnonly"
    "terminal.integrated.useWslProfiles": true,
    // "terminal.integrated.windowsEnableConpty": true,
    "terminal.integrated.wordSeparators": " ()[]{}',\"`─", // default
    "terminal.integrated.wordSeparators": "$ ()[]{}',\"`─", // testing $
    "python.terminal.activateEnvInCurrentTerminal": false,
    "python.terminal.activateEnvironment": true,
    "debug.terminal.clearBeforeReusing": false,
    // "terminal.explorerKind": "external",
    "terminal.integrated.altClickMovesCursor": true, // interesting
    "terminal.integrated.allowMnemonics": false, //  Note that this will cause all alt keystrokes to skip the shell when true.
    "terminal.integrated.allowMnemonics": false, //  Note that this will cause all alt keystrokes to skip the shell when true.
    "terminal.integrated.allowChords": false,
    "terminal.integrated.allowChords": true,
    "powershell.helpCompletion": "Disabled",
    /*
# h1: Language Config

    */
    // "terminal.integrated.cwd": "",
    "editor.quickSuggestions": {
        "strings": false, // I think this gave annoying matches especially in schema json
        "comments": false,
        "other": true
    },
    "[jsonc]": {
        "editor.quickSuggestions": {
            "strings": false, // I think this gave annoying matches especially in schema json
            "comments": false,
            "other": true
        },
        "editor.defaultFormatter": "vscode.json-language-features",
        "editor.formatOnSave": true,
        "editor.formatOnPaste": false
    },
    "[json]": {
        "editor.quickSuggestions": {
            "strings": false, // I think this gave annoying matches especially in schema json
            "comments": false,
            "other": true
        },
        "editor.defaultFormatter": "vscode.json-language-features",
        "editor.formatOnSave": true,
        "editor.formatOnPaste": false,
    },
    "[xml]": {
        // "editor.wordSeparators": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",
        "editor.formatOnSave": true,
        /* for formatting, try these depending on what's installed
        */
        "editor.defaultFormatter": "esbenp.prettier-vscode", // prettier
        "editor.defaultFormatter": "vscode.html-language-features", // built-in
    },
    /*

    Section: Lang: PowerShell


*/
    "powershell.codeFormatting.autoCorrectAliases": true,
    "powershell.codeFormatting.pipelineIndentationStyle": "IncreaseIndentationForFirstPipeline",
    "powershell.codeFormatting.useConstantStrings": true,
    "powershell.codeFormatting.useCorrectCasing": true,
    "powershell.integratedConsole.suppressStartupBanner": true,
    "powershell.promptToUpdatePowerShell": false,
    "[powershell]": {
        "editor.wordSeparators": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?", // previous default
        "editor.wordSeparators": "`~!@#%^&*()=+[{]}\\|;:'\",.<>/?", // new default
        "editor.formatOnSave": true,
        "editor.snippetSuggestions": "inline",
        "editor.suggest.showSnippets": true,
        "editor.suggest.preview": true,
        "files.encoding": "utf8bom",
        "editor.formatOnSaveMode": "file",
        "editor.formatOnPaste": true,
        "editor.formatOnPaste": false,
        "editor.formatOnType": false, // currently it's NYI in the extension
        "files.autoGuessEncoding": false,
        "editor.detectIndentation": false, // required for tabsize
        "editor.tabSize": 4,
        // if autoIndent is set to 'full' it breaks indentation on 'move line up/down'
        "editor.autoIndent": "advanced",
        "editor.semanticHighlighting.enabled": true,
        // chris
        /*

  ### Sect: Chris Dent Config

                 tags:

          */
        // "diffEditor.ignoreTrimWhitespace": true,
        "editor.trimAutoWhitespace": true,
        "editor.renderFinalNewline": false,
        "files.insertFinalNewline": true,
        "files.trimFinalNewlines": true
    },
    // "powershell.buttons.showPanelMovementButtons": true,
    // "powershell.buttons.showRunButtons": true,
    // "powershell.codeFolding.enable": true,
    // "powershell.codeFolding.showLastLine": true,
    // "powershell.developer.bundledModulesPath": "",
    // "powershell.developer.waitForSessionFileTimeoutSeconds": 240,
    // "powershell.notebooks.saveMarkdownCellsAs": "LineComment",
    // "powershell.codeFormatting.ignoreOneLineBlock": true,
    "powershell.codeFormatting.autoCorrectAliases": true,
    "powershell.codeFormatting.useConstantStrings": true,
    "powershell.codeFormatting.useCorrectCasing": true,
    "powershell.codeFormatting.whitespaceAroundPipe": true,
    "powershell.codeFormatting.whitespaceBetweenParameters": false,
    "powershell.integratedConsole.suppressStartupBanner": true,
    "powershell.notebooks.saveMarkdownCellsAs": "BlockComment",
    "powershell.notebooks.showToggleButton": true,
    "powershell.powerShellDefaultVersion": "pwsh",
    "powershell.powerShellDefaultVersion": "PowerShell (x64)",
    "powershell.promptToUpdatePowerShell": false,
    // Specifies the path to a PowerShell Script Analyzer settings file. To override the default settings for all projects, enter an absolute path, or enter a path relative to your workspace.
    // "powershell.scriptAnalysis.settingsPath": "C:/Users/cppmo_000/Documents/2021/dotfiles_git/powershell/PSScriptAnalyzerSettings.psd1",
    "powershell.scriptAnalysis.settingsPath": "PSScriptAnalyzerSettings.psd1",
    "powershell.scriptAnalysis.enable": true,
    /*

  ### Sect: Chris Dent Powershell Config

             tags:

      */
    "editor.renderLineHighlight": "all",
    // "editor.renderLineHighlightOnlyWhenFocus": true,
    "workbench.commandPalette.preserveInput": true,
    "powershell.codeFormatting.addWhitespaceAroundPipe": true,
    "powershell.codeFormatting.trimWhitespaceAroundPipe": true,
    "powershell.codeFormatting.whitespaceAfterSeparator": true,
    "powershell.codeFormatting.whitespaceAroundOperator": true,
    "powershell.codeFormatting.whitespaceBeforeOpenBrace": true,
    "powershell.codeFormatting.whitespaceBeforeOpenParen": true,
    "powershell.codeFormatting.whitespaceInsideBrace": true,
    "powershell.codeFormatting.newLineAfterCloseBrace": false, // on will fails test: PSScriptAnalyzer(PSPlaceCloseBrace)
    "[powerquery]": {
        "editor.wordSeparators": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?", // previous default
        "editor.wordSeparators": "`~!@#%^&*()=+[{]}\\|;:'\",.<>/?", // new default
        "editor.formatOnSave": true,
        "editor.snippetSuggestions": "inline",
        "editor.suggest.showSnippets": true,
        "editor.suggest.preview": false,
        "files.encoding": "utf8bom",
        "editor.formatOnSaveMode": "file",
        "editor.formatOnPaste": true,
        "editor.formatOnType": false, // currently it's NYI in the extension
        "files.autoGuessEncoding": false,
        "editor.detectIndentation": false, // required for tabsize
        "editor.tabSize": 4,
        // if autoIndent is set to 'full' it breaks indentation on 'move line up/down'
        "editor.autoIndent": "advanced",
        "editor.semanticHighlighting.enabled": true,
    },
    /*

# h1: semantic highlighting

    */
    "editor.semanticHighlighting.enabled": true, // or "ConfiguredByTheme"
    "editor.semanticTokenColorCustomizations": {
        // per-theme
        "[Default Dark+]": {
            "enabled": true,
            "rules": {
                // single value
                "parameter": "#d4d4d4",
                // vs many
                "parameter": {
                    "foreground": "#ff0000",
                    "foreground": "#464545", // nintheme
                    "underline": true,
                    "bold": true,
                    "italic": true,
                    "fontStyle": "italic bold underline",
                },
            }
        },
        // "variable": "#fae",
        // "variable": "#9dccfe",
        // or global
        "enabled": true,
        "rules": {
            /*
            "parameter": "#d4d4d4",
            "variable": "#9dccfe"
            "xmlDocCommentAttributeQuotes": "#ff0000",
            "*.builtin": {
                "foreground": "#FF0000",
                "fontStyle": "bold"
            }
            */
        }
    },
    "files.defaultLanguage": "${activeEditorLanguage}",
    "files.trimTrailingWhitespace": true,
    "editor.renderLineHighlight": "all",
    /*

# h1: Extension Specific Config: "ms-vscode.powershell-preview"

    */
    "powershell.notebooks.showToggleButton": true,
    // "powershell.notebooks.saveMarkdownCellsAs": "LineComment",
    "powershell.notebooks.saveMarkdownCellsAs": "BlockComment",
    // many more: "dotnet-interactive.*"
    "[dotnet-interactive.csharp]": {},
    "[dotnet-interactive]": {},
    "[markdown]": {
        "editor.wordWrap": "on",
        "editor.quickSuggestions": false,
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "yzhang.markdown-all-in-one",
    },
    // "powershell.notebooks.saveMarkdownCellsAs": "LineComment",
    /*

# h1: File Type Overrides

    uses 'redhat.vscode-xml'
    applies schemas to PowerShell '.Format.ps1xml' and '.Types.ps1xml'
    */
    "workbench.editorAssociations": {
        "**/*.dib": "dotnet-interactive",
        "*.ipynb": "jupyter-notebook"
    },
    "xml.fileAssociations": [
        {
            "systemId": "https://raw.githubusercontent.com/PowerShell/PowerShell/master/src/Schemas/Format.xsd",
            "pattern": "**/*.Format.ps1xml"
        },
        {
            "systemId": "https://raw.githubusercontent.com/PowerShell/PowerShell/master/src/Schemas/Types.xsd",
            "pattern": "**/*.Types.ps1xml"
        }
    ],
    "files.associations": {
        "*.json": "jsonc",
        "*.ps1xml": "xml",
        "*.wixproj": "xml",
        "*.mproj": "xml",
        "*.odc": "html",
        ".batrc": "shellscript",
        ".ripgreprc": "shellscript",
        "nuget.config": "xml",
        "*.dib": "dotnet-interactive"
    },
    "python.insidersChannel": "weekly",
    "editor.renderLineHighlightOnlyWhenFocus": true,
    "files.exclude": {
        "**/*.exe": true,
        "**/*.lnk": true,
        "**/*.pbix": true,
        "**/*.zip": true,
        // venv, cache, or compiled
        "**/*.py[co]": true,
        "**/__pycache__": true,
        "**/node_modules": true,
        "**/.mypy_cache": true,
        "**/venv": true
    },
    "search.exclude": {
        // "**/*.mez": true,
        "**/*.lnk": true,
        "**/*.log": true,
    },
    "editor.snippetSuggestions": "none",
    "editor.renderWhitespace": "none",
    "editor.renderControlCharacters": true,
    "breadcrumbs.symbolSortOrder": "type",
    "editor.wordWrapColumn": 160,
    "editor.wrappingIndent": "deepIndent",
    "editor.detectIndentation": false,
    "editor.fontSize": 18,
    "editor.fontFamily": "'cascadia code', Consolas, 'Courier New', monospace",
    "editor.fontFamily": "'FiraCode Nerd Font', Consolas, 'Courier New', monospace",
    "editor.fontSize": 16,
    "editor.fontFamily": "'FiraCode Nerd Font'",
    // "editor.fontFamily": "'Fira code retina', monospace",
    "notebook.cellToolbarLocation": {
        "default": "right",
        "jupyter-notebook": "left"
    },
    "python.defaultInterpreterPath": "C:\\Program Files (x86)\\Python36-32\\python.exe",
    "jupyter.jupyterServerType": "local",
    "python.analysis.logLevel": "Information",
    "python.logging.level": "info",
    "powershell.developer.editorServicesLogLevel": "Verbose",
    "editor.fontLigatures": true,
    "terminal.integrated.shellArgs.windows": null,
    "pesterExplorer.autoDiscoverOnOpen": true,
    "workbench.iconTheme": "vscode-icons",
    "todo-tree.general.tags": [
        "BUG",
        "HACK",
        "FIXME",
        "TODO",
        "XXX",
        "[ ]",
        "[x]"
    ],
    "todo-tree.regex.regex": "(//|#|<!--|;|/\\*|^|^\\s*(-|\\d+.))\\s*($TAGS)",
    /*


    ## Section: Dotnet, interactive, notebooks

*/
    "errorLens.followCursor": "closestProblem",
    "errorLens.followCursorMore": 2,
    "errorLens.fontWeight": "100",
    "errorLens.fontFamily": "calibri",
    "errorLens.delay": 1200,
    "errorLens.delay": 3800,
    "errorLens.messageTemplate": "$severity $message  [$source : $code] $count",
    "errorLens.messageTemplate": "$message [$source : $code] $count", //severity to find config
    "errorLens.onSaveTimeout": 1000,
    "errorLens.warningGutterIconColor": "#ff942f10",
    "errorLens.errorGutterIconColor": "#e45454",
    "errorLens.errorGutterIconColor": "#ff942f10",
    "errorLens.infoGutterIconColor": "#00b7e4",
    "errorLens.statusBarColorsEnabled": true,
    "errorLens.onSave": false,
    "window.title": "${rootName}$separator}${dirty}${activeEditorShort}${separator}${rootName}${separator}${appName}",
    "terminal.integrated.cwd": "${fileDirname}",
    "powershell.cwd": "${fileDirname}",
    "insert-unicode.favorites": {
        "directories": {
            "filepath": {
                "directories": {},
                "items": [
                    [
                        10143,
                        9488
                    ]
                ]
            }
        },
        "items": [
            [
                9488
            ],
            [
                10143
            ],
            [
                8662,
                8814,
                172
            ],
            [
                0
            ]
        ]
    },
    "vsicons.dontShowNewVersionMessage": true,
    "powershell.buttons.showPanelMovementButtons": true,
    "powershell.helpCompletion": "LineComment",
    "powershell.sideBar.CommandExplorerVisibility": false,
    "errorLens.enabled": false,
    "redhat.telemetry.enabled": false,
    /*

    ## Section: Dotnet, interactive, notebooks

*/
    // "notebook.editorOptionsCustomizations": {
    //     // note: sometimes there's a delay setting config for these
    //     "editor.fontSize": 18,
    //     // "editor.fontFamily": "arial, 'cascadia mono', Consolas, 'Courier New', monospace"
    //     "editor.codeLensFontFamily": "'comic sans'",
    //     // "editor.codeLensFontSize": 0.2,pwd
    //     // "editor.lineHeight": 0,
    //     "editor.fontFamily": "'cascadia code', Consolas, 'Courier New', monospace",
    // },
    // "notebook.displayOrder": [],
    // "notebook.outline.showCodeCells": true,
    // "dotnet-interactive.languageServiceDelay": 500,
    // "dotnet-interactive.kernelTransportArgs": [
    //     "{dotnet_path}",
    //     "tool",
    //     "run",
    //     "dotnet-interactive",
    //     "--",
    //     "[vscode]",
    //     "stdio",
    //     "--working-dir",
    //     "{working_dir}"
    // ],
    // "dotnet-interactive.kernelTransportWorkingDirectory": "{global_storage_path}",
    // "dotnet-interactive.minimumDotNetSdkVersion": "5.0",
    // "[dotnet-interactive.html]": {},
    // "dotnet-interactive.minimumInteractiveToolVersion": "1.0.231703",
    // "[dotnet-interactive.sql]": {},
    // "[dotnet-interactive.pwsh]": {
    //     "editor.fontSize": 7,
    // },
    // "[dotnet-interactive.fsharp]": {},
    // "[dotnet-interactive.markdown]": {},
    // "[dotnet-interactive.javascript]": {},
    // "[dotnet-interactive.magic-commands]": {},
    // "csharp.suppressDotnetInstallWarning": false,
    // "csharp.suppressDotnetRestoreNotification": false,
    // "jupyter.sendSelectionToInteractiveWindow": false,
    // "dotnet-interactive.interactiveToolSource": "https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-tools/nuget/v3/index.json",
    // "snippets.viewer.focusOnActiveEditorSnippets": false,
    /*

# h1: Terminal Config

    */
    /*
    "terminal.integrated.cwd": "c:\\data\\jake",
    */
}