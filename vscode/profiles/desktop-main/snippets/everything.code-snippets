{
    /*

    Next:

        default: convert current filepath ( relative workspace )

        ex:
            Plaster\1.1.3\Schema\PlasterManifest-v1.xsd
        so:
            https://github.com/PowerShellOrg/Plaster
            Plaster\1.1.3\Schema\PlasterManifest-v1.xsd
            /blob/master/
            https://github.com/PowerShellOrg/Plaster/blob/master/src/Schema/PlasterManifest-v1.xsd
        to:
            @(
                https://github.com/PowerShellOrg/Plaster
                /blob/master/
                minus: Plaster\1.1.3\Schema\PlasterManifest-v1.xsd
            )

        https://github.com/ninmonkey/Ninmonkey.Console/blob/master/public/ConvertTo-BitString.ps1


    */
    "Date-Iso": {
        // "scope": "markdown,powerquery,swift,powershell,ps1,typescript,javascriptjson,jsonc,xml,py,python,js,cs,csx,code-workspace,code-snippets,powershell",
        "prefix": "date ISO",
        "description": "Using ISO format YYYY-MM-DD",
        "body": [
            "$CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE"
        ]
    },
        "File.Current.Name": {
        "prefix": "cur File.Name",
        "description": "Current $file.Name",
        "body": [
            "$TM_FILENAME"
        ],

    },
    "File.Current.FullName": {
        "prefix": "cur File.FullName",
        "description": "Current $file.FullName",
        "body": [
            "$TM_FILEPATH"
        ],
    },
    "File.Current.DirectoryName": {
        "prefix": "cur File.Directory",
        "description": "Current $file.Directory",
        "body": [
            "\t${TM_FILEPATH/(.*)\\..+$/$1/}",
        ],
    },
    "md.tinydate.Date-Iso": {
        "scope": "markdown",
        "prefix": "markdown date tiny",
        "description": "inserts formatted as smaller text, Using ISO format YYYY-MM-DD",
        "body": [
            "<span style='font-size:0.55em;'>$CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE</span>"
            // "$CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE"
        ]
    },
    "1234 Regex: Escape Backslashes📌": {
        // "scope": "markdown,powerquery,swift,powershell,ps1,typescript,javascriptjson,jsonc,xml,py,python,js,cs,csx,code-workspace,code-snippets,powershell",
        "scope": "ruby",
        "prefix": "escape backslash",
        "description": "Converts backslashes to forslashes, for json paths 4321.",
        "body": [
            // "${TM_SELECTED_TEXT/(\\\\${2})/\\//gi}", // out: /
            "${TM_SELECTED_TEXT/(\\\\)/\\//gi}", // out: /
            // "${TM_SELECTED_TEXT/cat}", // out: /
        ]
        // C:\Users\cppmo_000\AppData\Roaming\Code\User\snippets\escape_text.code-snippets
    },
    "[meta] New-Guid": {
        "prefix": "Guid",
        "body": "${UUID}",
        "description": "Inserts a new GUID(), nothing else. Spartan. 🦍",
    },


    "[meta] full Path + new-guid() + log - iter1": {
        // "scope": "powershell,ps1",
        "prefix": "guid filepath log",
        "description": "📚 bookmark, Inserts filepath logging func /w filepath with a new GUID()",
        "body": "\"📚 ${1:enter} ==> ${2:other ==>} local: <file:///${TM_FILEPATH}> ⁞ ${UUID}\" | write-warning$0"
        /*
        '==>.📚: root ==>  build\lamb-pwsh-runtime\function\examplehandler.ps1/684bbcbd-54d4-49b7-97d8-c43c185a0df8' | Write-Host
        */
    },



    "[meta] relative Path + new-guid() + Log - iter1": {
        // "scope": "powershell,ps1",
        "prefix": "guid RelativePath log",
        "description": "📚 bookmark, Inserts filepath logging func /w relativepath with a new GUID()",
        "body": "\"📚 ${1:enter} ==> ${2:other ==>}  ${RELATIVE_FILEPATH} ⁞ ${UUID}\" | write-warning$0"
        /*
        '==>.📚: root ==>  build\lamb-pwsh-runtime\function\examplehandler.ps1/684bbcbd-54d4-49b7-97d8-c43c185a0df8' | Write-Host
        */
    },
    // sample snippet using UUID and RELATIVE_FILEPATH
    "[meta] relative Path + new-guid() - iter0": {
        "prefix": "[meta].Guid() ; filepath unique name",
        "description": "Inserts relativepath with a new GUID()",
        "body": "${RELATIVE_FILEPATH}/${UUID}$0"
    },

    // sample snippet using UUID and RELATIVE_FILEPATH
    "[meta] full Path + new-guid() - iter0": {
        "prefix": "[meta].Guid() ; filepath unique name",
        "description": "Inserts full path with a new GUID()",
        "body": "${TM_FILEPATH}/${UUID}$0"
    },
}